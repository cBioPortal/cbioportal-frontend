{
  "swagger": "2.0",
  "info": {
    "description": "Genome Nexus Variant Annotation API",
    "version": "2.0",
    "title": "Genome Nexus API",
    "contact": {
      "name": "CMO, MSKCC"
    },
    "license": {
      "name": "GNU AFFERO GENERAL PUBLIC LICENSE Version 3",
      "url": "https://github.com/cBioPortal/genome-nexus/blob/master/LICENSE"
    }
  },
  "tags": [
    {
      "name": "cross-reference-controller",
      "description": "Cross Reference Controller"
    },
    {
      "name": "cancer-hotspots-controller",
      "description": "Cancer Hotspots Controller"
    },
    {
      "name": "mutation-assessor-controller",
      "description": "Mutation Assessor Controller"
    },
    {
      "name": "annotation-summary-controller",
      "description": "Annotation Summary Controller"
    },
    {
      "name": "isoform-override-controller",
      "description": "Isoform Override Controller"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/annotation/summary": {
      "post": {
        "tags": [
          "annotation-summary-controller"
        ],
        "summary": "Retrieves VEP annotation summary for the provided list of variants",
        "operationId": "fetchVariantAnnotationSummaryPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "variants",
            "description": "List of variants. For example [\"X:g.66937331T>A\",\"17:g.41242962_41242963insGA\"]",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "isoformOverrideSource",
            "in": "query",
            "description": "Isoform override source. For example uniprot",
            "required": false,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Indicates whether to return summary for all transcripts or only for canonical transcript",
            "required": false,
            "type": "string",
            "default": "ALL",
            "enum": [
              "ALL",
              "CANONICAL"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VariantAnnotationSummary"
              }
            }
          }
        }
      }
    },
    "/annotation/summary/{variant}": {
      "get": {
        "tags": [
          "annotation-summary-controller"
        ],
        "summary": "Retrieves VEP annotation summary for the provided variant",
        "operationId": "fetchVariantAnnotationSummaryGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "variant",
            "in": "path",
            "description": "Variant. For example 17:g.41242962_41242963insGA",
            "required": true,
            "type": "string"
          },
          {
            "name": "isoformOverrideSource",
            "in": "query",
            "description": "Isoform override source. For example uniprot",
            "required": false,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Indicates whether to return summary for all transcripts or only for canonical transcript",
            "required": false,
            "type": "string",
            "default": "ALL",
            "enum": [
              "ALL",
              "CANONICAL"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VariantAnnotationSummary"
            }
          }
        }
      }
    },
    "/cancer_hotspots/genomic": {
      "post": {
        "tags": [
          "cancer-hotspots-controller"
        ],
        "summary": "Retrieves hotspot annotations for the provided list of genomic locations",
        "operationId": "fetchHotspotAnnotationByGenomicLocationPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "genomicLocations",
            "description": "List of genomic locations.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenomicLocation"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AggregatedHotspots"
              }
            }
          }
        }
      }
    },
    "/cancer_hotspots/genomic/{genomicLocation}": {
      "get": {
        "tags": [
          "cancer-hotspots-controller"
        ],
        "summary": "Retrieves hotspot annotations for a specific genomic location",
        "operationId": "fetchHotspotAnnotationByGenomicLocationGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "genomicLocation",
            "in": "path",
            "description": "A genomic location. For example 7,140453136,140453136,A,T",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Hotspot"
              }
            }
          }
        }
      }
    },
    "/cancer_hotspots/hgvs": {
      "post": {
        "tags": [
          "cancer-hotspots-controller"
        ],
        "summary": "Retrieves hotspot annotations for the provided list of variants",
        "operationId": "fetchHotspotAnnotationByHgvsPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "variants",
            "description": "List of variants. For example [\"7:g.140453136A>T\",\"12:g.25398285C>A\"]",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AggregatedHotspots"
              }
            }
          }
        }
      }
    },
    "/cancer_hotspots/hgvs/{variant}": {
      "get": {
        "tags": [
          "cancer-hotspots-controller"
        ],
        "summary": "Retrieves hotspot annotations for a specific variant",
        "operationId": "fetchHotspotAnnotationByHgvsGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "variant",
            "in": "path",
            "description": "A variant. For example 7:g.140453136A>T",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Hotspot"
              }
            }
          }
        }
      }
    },
    "/isoform_override": {
      "post": {
        "tags": [
          "isoform-override-controller"
        ],
        "summary": "Gets the isoform override information for the specified source and the list of transcript ids",
        "operationId": "fetchIsoformOverridePOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "description": "Override source. For example uniprot",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "transcriptIds",
            "description": "List of transcript ids. For example [\"ENST00000361125\",\"ENST00000443649\"]. ",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IsoformOverride"
              }
            }
          }
        }
      }
    },
    "/isoform_override/sources": {
      "get": {
        "tags": [
          "isoform-override-controller"
        ],
        "summary": "Gets a list of available isoform override data sources",
        "operationId": "fetchIsoformOverrideSourcesGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/isoform_override/{source}": {
      "get": {
        "tags": [
          "isoform-override-controller"
        ],
        "summary": "Gets the isoform override information for the specified source",
        "operationId": "fetchAllIsoformOverridesGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "description": "Override source. For example uniprot",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IsoformOverride"
              }
            }
          }
        }
      }
    },
    "/isoform_override/{source}/{transcriptId}": {
      "get": {
        "tags": [
          "isoform-override-controller"
        ],
        "summary": "Gets the isoform override information for the specified source and transcript id",
        "operationId": "fetchIsoformOverrideGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "path",
            "description": "Override source. For example uniprot.",
            "required": true,
            "type": "string"
          },
          {
            "name": "transcriptId",
            "in": "path",
            "description": "Transcript id. For example ENST00000361125.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IsoformOverride"
            }
          }
        }
      }
    },
    "/mutation_assessor": {
      "post": {
        "tags": [
          "mutation-assessor-controller"
        ],
        "summary": "Retrieves mutation assessor information for the provided list of variants",
        "operationId": "postMutationAssessorAnnotation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "variants",
            "description": "List of variants. For example [\"7:g.140453136A>T\",\"12:g.25398285C>A\"]",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MutationAssessor"
              }
            }
          }
        }
      }
    },
    "/mutation_assessor/{variant}": {
      "get": {
        "tags": [
          "mutation-assessor-controller"
        ],
        "summary": "Retrieves mutation assessor information for the provided list of variants",
        "operationId": "fetchMutationAssessorAnnotationGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "variant",
            "in": "path",
            "description": "A variants. For example 7:g.140453136A>T",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MutationAssessor"
            }
          }
        }
      }
    },
    "/xrefs/{accession}": {
      "get": {
        "tags": [
          "cross-reference-controller"
        ],
        "summary": "Perform lookups of Ensembl identifiers and retrieve their external references in other databases",
        "operationId": "fetchGeneXrefsGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accession",
            "in": "path",
            "description": "Ensembl gene accession. For example ENSG00000169083",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeneXref"
              }
            }
          }
        },
        "deprecated": true
      }
    }
  },
  "definitions": {
    "AggregatedHotspots": {
      "type": "object",
      "required": [
        "genomicLocation",
        "hotspots",
        "variant"
      ],
      "properties": {
        "genomicLocation": {
          "description": "Genomic Location",
          "$ref": "#/definitions/GenomicLocation"
        },
        "hotspots": {
          "type": "array",
          "description": "Hotspots",
          "items": {
            "$ref": "#/definitions/Hotspot"
          }
        },
        "variant": {
          "type": "string",
          "description": "HGVS notation"
        }
      }
    },
    "GeneXref": {
      "type": "object",
      "required": [
        "db_display_name",
        "dbname",
        "description",
        "display_id",
        "primary_id",
        "version"
      ],
      "properties": {
        "db_display_name": {
          "type": "string",
          "description": "Database display name"
        },
        "dbname": {
          "type": "string",
          "description": "Database name"
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "display_id": {
          "type": "string",
          "description": "Display id"
        },
        "ensemblGeneId": {
          "type": "string"
        },
        "info_text": {
          "type": "string",
          "description": "Database info text"
        },
        "info_types": {
          "type": "string",
          "description": "Database info type"
        },
        "primary_id": {
          "type": "string",
          "description": "Primary id"
        },
        "synonyms": {
          "type": "array",
          "description": "Synonyms",
          "items": {
            "type": "string"
          }
        },
        "version": {
          "type": "string",
          "description": "Version"
        }
      }
    },
    "GenomicLocation": {
      "type": "object",
      "required": [
        "chromosome",
        "end",
        "referenceAllele",
        "start",
        "variantAllele"
      ],
      "properties": {
        "chromosome": {
          "type": "string",
          "description": "Chromosome"
        },
        "start": {
          "type": "integer",
          "format": "int32",
          "description": "Start Position"
        },
        "end": {
          "type": "integer",
          "format": "int32",
          "description": "End Position"
        },
        "referenceAllele": {
          "type": "string",
          "description": "Reference Allele"
        },
        "variantAllele": {
          "type": "string",
          "description": "Variant Allele"
        }
      }
    },
    "Hotspot": {
      "type": "object",
      "properties": {
        "hugoSymbol": {
          "type": "string",
          "description": "Hugo gene symbol"
        },
        "inframeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Inframe mutation count"
        },
        "missenseCount": {
          "type": "integer",
          "format": "int32",
          "description": "Missense mutation count"
        },
        "residue": {
          "type": "string",
          "description": "Hotspot residue"
        },
        "spliceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Splice mutation count"
        },
        "truncatingCount": {
          "type": "integer",
          "format": "int32",
          "description": "Truncation mutation count"
        },
        "tumorCount": {
          "type": "integer",
          "format": "int32",
          "description": "Tumor count"
        },
        "type": {
          "type": "string",
          "description": "Hotspot type"
        }
      }
    },
    "IntegerRange": {
      "type": "object",
      "properties": {
        "end": {
          "type": "integer",
          "format": "int32"
        },
        "start": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "IsoformOverride": {
      "type": "object",
      "required": [
        "transcriptId"
      ],
      "properties": {
        "ccdsId": {
          "type": "string",
          "description": "CCDS ID"
        },
        "geneSymbol": {
          "type": "string",
          "description": "Hugo gene symbol"
        },
        "refseqId": {
          "type": "string",
          "description": "RefSeq ID"
        },
        "transcriptId": {
          "type": "string",
          "description": "Ensembl transcript id"
        }
      }
    },
    "MutationAssessor": {
      "type": "object",
      "required": [
        "input"
      ],
      "properties": {
        "codonStartPosition": {
          "type": "string",
          "description": "Codon start position"
        },
        "cosmicCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of mutations in COSMIC for this protein"
        },
        "functionalImpact": {
          "type": "string",
          "description": "Functional impact"
        },
        "functionalImpactScore": {
          "type": "number",
          "format": "double",
          "description": "Functional impact score"
        },
        "hgvs": {
          "type": "string"
        },
        "hugoSymbol": {
          "type": "string",
          "description": "Hugo gene symbol"
        },
        "input": {
          "type": "string",
          "description": "User-input variants"
        },
        "mappingIssue": {
          "type": "string",
          "description": "Mapping issue info"
        },
        "msaGaps": {
          "type": "number",
          "format": "double",
          "description": "Portion of gaps in variant position in multiple sequence alignment"
        },
        "msaHeight": {
          "type": "integer",
          "format": "int32",
          "description": "Number of diverse sequences in multiple sequence alignment (identical or highly similar sequences filtered out)"
        },
        "msaLink": {
          "type": "string",
          "description": "Link to multiple sequence alignment"
        },
        "pdbLink": {
          "type": "string",
          "description": "Link to 3d structure browser"
        },
        "referenceGenomeVariant": {
          "type": "string",
          "description": "Reference genome variant"
        },
        "referenceGenomeVariantType": {
          "type": "string",
          "description": "Reference genome variant type"
        },
        "refseqId": {
          "type": "string",
          "description": "Refseq protein ID"
        },
        "refseqPosition": {
          "type": "integer",
          "format": "int32",
          "description": "Variant position in Refseq protein, can be different from the one in Uniprot"
        },
        "refseqResidue": {
          "type": "string",
          "description": "Reference residue in Refseq protein, can be different from the one in Uniprot"
        },
        "snpCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of SNPs in dbSNP for this protein"
        },
        "uniprotId": {
          "type": "string",
          "description": "Uniprot protein accession ID"
        },
        "uniprotPosition": {
          "type": "integer",
          "format": "int32",
          "description": "Variant position in Uniprot protein, can be different from the one in Refseq"
        },
        "uniprotResidue": {
          "type": "string",
          "description": "Reference residue in Uniprot protein, can be different from the one in Refseq"
        },
        "variant": {
          "type": "string",
          "description": "Amino acid substitution"
        },
        "variantConservationScore": {
          "type": "number",
          "format": "double",
          "description": "Variant conservation score"
        },
        "variantSpecificityScore": {
          "type": "number",
          "format": "double",
          "description": "Variant specificity score"
        }
      }
    },
    "TranscriptConsequenceSummary": {
      "type": "object",
      "required": [
        "transcriptId"
      ],
      "properties": {
        "codonChange": {
          "type": "string",
          "description": "Codon change"
        },
        "consequenceTerms": {
          "type": "string",
          "description": "Consequence terms (comma separated)"
        },
        "entrezGeneId": {
          "type": "string",
          "description": "Entrez gene id"
        },
        "hgvsc": {
          "type": "string",
          "description": "HGVSc"
        },
        "hgvsp": {
          "type": "string",
          "description": "HGVSp"
        },
        "hgvspShort": {
          "type": "string",
          "description": "HGVSp short"
        },
        "hugoGeneSymbol": {
          "type": "string",
          "description": "Hugo gene symbol"
        },
        "proteinPosition": {
          "description": "Protein position (start and end)",
          "$ref": "#/definitions/IntegerRange"
        },
        "refSeq": {
          "type": "string",
          "description": "RefSeq id"
        },
        "transcriptId": {
          "type": "string",
          "description": "Transcript id"
        },
        "variantClassification": {
          "type": "string",
          "description": "Variant classification"
        }
      }
    },
    "VariantAnnotationSummary": {
      "type": "object",
      "required": [
        "transcriptConsequences",
        "variant"
      ],
      "properties": {
        "assemblyName": {
          "type": "string",
          "description": "Assembly name"
        },
        "canonicalTranscriptId": {
          "type": "string",
          "description": "Canonical transcript id"
        },
        "genomicLocation": {
          "description": "Genomic location",
          "$ref": "#/definitions/GenomicLocation"
        },
        "strandSign": {
          "type": "string",
          "description": "Strand (- or +)"
        },
        "transcriptConsequences": {
          "type": "array",
          "description": "List of transcript consequence summaries",
          "items": {
            "$ref": "#/definitions/TranscriptConsequenceSummary"
          }
        },
        "variant": {
          "type": "string",
          "description": "Variant key"
        },
        "variantType": {
          "type": "string",
          "description": "Variant type"
        }
      }
    }
  }
}
