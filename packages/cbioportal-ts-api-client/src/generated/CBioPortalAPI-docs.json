{
  "swagger": "2.0",
  "info": {
    "description": "A web service for supplying JSON formatted data to cBioPortal clients. Please note that this API is currently in beta and subject to change.",
    "version": "1.0 (beta)",
    "title": "cBioPortal web API [Beta]",
    "contact": {
      "name": "cBioPortal",
      "url": "https://www.cbioportal.org",
      "email": "cbioportal@googlegroups.com"
    },
    "license": {
      "name": "License",
      "url": "https://github.com/cBioPortal/cbioportal/blob/master/LICENSE"
    }
  },
  "tags": [
    {
      "name": "Cancer Types"
    },
    {
      "name": "Studies"
    },
    {
      "name": "Patients"
    },
    {
      "name": "Samples"
    },
    {
      "name": "Sample Lists"
    },
    {
      "name": "Clinical Attributes"
    },
    {
      "name": "Clinical Data"
    },
    {
      "name": "Clinical Events"
    },
    {
      "name": "Molecular Data"
    },
    {
      "name": "Molecular Profiles"
    },
    {
      "name": "Mutations"
    },
    {
      "name": "Discrete Copy Number Alterations"
    },
    {
      "name": "Copy Number Segments"
    },
    {
      "name": "Genes"
    },
    {
      "name": "Gene Panels"
    },
    {
      "name": "Generic Assays"
    },
    {
      "name": "Structural Variants"
    },
    {
      "name": "Reference Genome Genes"
    },
    {
      "name": "Resource Definitions"
    },
    {
      "name": "Resource Data"
    }
  ],
  "paths": {
    "/cancer-types": {
      "get": {
        "tags": [
          "Cancer Types"
        ],
        "summary": "Get all cancer types",
        "operationId": "getAllCancerTypesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "cancerTypeId",
              "name",
              "clinicalTrialKeywords",
              "dedicatedColor",
              "shortName",
              "parent"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeOfCancer"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/cancer-types/{cancerTypeId}": {
      "get": {
        "tags": [
          "Cancer Types"
        ],
        "summary": "Get a cancer type",
        "operationId": "getCancerTypeUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cancerTypeId",
            "in": "path",
            "description": "Cancer Type ID e.g. acc",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeOfCancer"
            }
          }
        },
        "deprecated": false
      }
    },
    "/clinical-attributes": {
      "get": {
        "tags": [
          "Clinical Attributes"
        ],
        "summary": "Get all clinical attributes",
        "operationId": "getAllClinicalAttributesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "clinicalAttributeId",
              "displayName",
              "description",
              "datatype",
              "patientAttribute",
              "priority",
              "studyId"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalAttribute"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/clinical-attributes/counts/fetch": {
      "post": {
        "tags": [
          "Clinical Attributes"
        ],
        "summary": "Get counts for clinical attributes according to their data availability for selected samples/patients",
        "operationId": "getClinicalAttributeCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clinicalAttributeCountFilter",
            "description": "List of SampleIdentifiers or Sample List ID",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClinicalAttributeCountFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalAttributeCount"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/clinical-attributes/fetch": {
      "post": {
        "tags": [
          "Clinical Attributes"
        ],
        "summary": "Fetch clinical attributes",
        "operationId": "fetchClinicalAttributesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "in": "body",
            "name": "studyIds",
            "description": "List of Study IDs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalAttribute"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/clinical-data/fetch": {
      "post": {
        "tags": [
          "Clinical Data"
        ],
        "summary": "Fetch clinical data by patient IDs or sample IDs (all studies)",
        "operationId": "fetchClinicalDataUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clinicalDataMultiStudyFilter",
            "description": "List of patient or sample identifiers and attribute IDs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClinicalDataMultiStudyFilter"
            }
          },
          {
            "name": "clinicalDataType",
            "in": "query",
            "description": "Type of the clinical data",
            "required": false,
            "type": "string",
            "default": "SAMPLE",
            "allowEmptyValue": false,
            "enum": [
              "SAMPLE",
              "PATIENT"
            ]
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/copy-number-segments/fetch": {
      "post": {
        "tags": [
          "Copy Number Segments"
        ],
        "summary": "Fetch copy number segments by sample ID",
        "operationId": "fetchCopyNumberSegmentsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chromosome",
            "in": "query",
            "description": "Chromosome",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "in": "body",
            "name": "sampleIdentifiers",
            "description": "List of sample identifiers",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SampleIdentifier"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CopyNumberSeg"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/gene-panel-data/fetch": {
      "post": {
        "tags": [
          "Gene Panels"
        ],
        "summary": "Fetch gene panel data",
        "operationId": "fetchGenePanelDataInMultipleMolecularProfilesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "sampleMolecularIdentifiers",
            "description": "List of Molecular Profile ID and Sample ID pairs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SampleMolecularIdentifier"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenePanelData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/gene-panels": {
      "get": {
        "tags": [
          "Gene Panels"
        ],
        "summary": "Get all gene panels",
        "operationId": "getAllGenePanelsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "genePanelId",
              "description"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenePanel"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/gene-panels/fetch": {
      "post": {
        "tags": [
          "Gene Panels"
        ],
        "summary": "Get gene panel",
        "operationId": "fetchGenePanelsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "genePanelIds",
            "description": "List of Gene Panel IDs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenePanel"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/gene-panels/{genePanelId}": {
      "get": {
        "tags": [
          "Gene Panels"
        ],
        "summary": "Get gene panel",
        "operationId": "getGenePanelUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "genePanelId",
            "in": "path",
            "description": "Gene Panel ID e.g. NSCLC_UNITO_2016_PANEL",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenePanel"
            }
          }
        },
        "deprecated": false
      }
    },
    "/generic_assay_data/fetch": {
      "post": {
        "tags": [
          "Generic Assays"
        ],
        "summary": "Fetch generic_assay_data",
        "operationId": "fetchGenericAssayDataInMultipleMolecularProfilesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "genericAssayDataMultipleStudyFilter",
            "description": "List of Molecular Profile ID and Sample ID pairs or List of MolecularProfile IDs and Generic Assay IDs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericAssayDataMultipleStudyFilter"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenericAssayData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/generic_assay_data/{molecularProfileId}/fetch": {
      "post": {
        "tags": [
          "Generic Assays"
        ],
        "summary": "fetch generic_assay_data in a molecular profile",
        "operationId": "fetchGenericAssayDataInMolecularProfileUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "genericAssayDataFilter",
            "description": "List of Sample IDs/Sample List ID and Generic Assay IDs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericAssayDataFilter"
            }
          },
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenericAssayData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/generic_assay_meta/fetch": {
      "post": {
        "tags": [
          "Generic Assays"
        ],
        "summary": "Fetch meta data for generic-assay by ID",
        "operationId": "fetchGenericAssayMetaDataUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "genericAssayMetaFilter",
            "description": "List of Molecular Profile ID or List of Stable ID",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericAssayMetaFilter"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenericAssayMeta"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/genes": {
      "get": {
        "tags": [
          "Genes"
        ],
        "summary": "Get all genes",
        "operationId": "getAllGenesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "alias",
            "in": "query",
            "description": "Alias of the gene",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword that applies to hugo gene symbol of the genes",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 100000,
            "maximum": 100000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "entrezGeneId",
              "hugoGeneSymbol",
              "type",
              "cytoband",
              "length"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Gene"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/genes/fetch": {
      "post": {
        "tags": [
          "Genes"
        ],
        "summary": "Fetch genes by ID",
        "operationId": "fetchGenesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "geneIdType",
            "in": "query",
            "description": "Type of gene ID",
            "required": false,
            "type": "string",
            "default": "ENTREZ_GENE_ID",
            "allowEmptyValue": false,
            "enum": [
              "ENTREZ_GENE_ID",
              "HUGO_GENE_SYMBOL"
            ]
          },
          {
            "in": "body",
            "name": "geneIds",
            "description": "List of Entrez Gene IDs or Hugo Gene Symbols",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Gene"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/genes/{geneId}": {
      "get": {
        "tags": [
          "Genes"
        ],
        "summary": "Get a gene",
        "operationId": "getGeneUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "geneId",
            "in": "path",
            "description": "Entrez Gene ID or Hugo Gene Symbol e.g. 1 or A1BG",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Gene"
            }
          }
        },
        "deprecated": false
      }
    },
    "/genes/{geneId}/aliases": {
      "get": {
        "tags": [
          "Genes"
        ],
        "summary": "Get aliases of a gene",
        "operationId": "getAliasesOfGeneUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "geneId",
            "in": "path",
            "description": "Entrez Gene ID or Hugo Gene Symbol e.g. 1 or A1BG",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-data/fetch": {
      "post": {
        "tags": [
          "Molecular Data"
        ],
        "summary": "Fetch molecular data",
        "operationId": "fetchMolecularDataInMultipleMolecularProfilesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "molecularDataMultipleStudyFilter",
            "description": "List of Molecular Profile ID and Sample ID pairs or List of MolecularProfile IDs and Entrez Gene IDs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MolecularDataMultipleStudyFilter"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NumericGeneMolecularData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-profiles": {
      "get": {
        "tags": [
          "Molecular Profiles"
        ],
        "summary": "Get all molecular profiles",
        "operationId": "getAllMolecularProfilesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "molecularProfileId",
              "molecularAlterationType",
              "datatype",
              "name",
              "description",
              "showProfileInAnalysisTab"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MolecularProfile"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-profiles/fetch": {
      "post": {
        "tags": [
          "Molecular Profiles"
        ],
        "summary": "Fetch molecular profiles",
        "operationId": "fetchMolecularProfilesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "molecularProfileFilter",
            "description": "List of Molecular Profile IDs or List of Study IDs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MolecularProfileFilter"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MolecularProfile"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-profiles/{molecularProfileId}": {
      "get": {
        "tags": [
          "Molecular Profiles"
        ],
        "summary": "Get molecular profile",
        "operationId": "getMolecularProfileUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID e.g. acc_tcga_mutations",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MolecularProfile"
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-profiles/{molecularProfileId}/discrete-copy-number": {
      "get": {
        "tags": [
          "Discrete Copy Number Alterations"
        ],
        "summary": "Get discrete copy number alterations in a molecular profile",
        "operationId": "getDiscreteCopyNumbersInMolecularProfileUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "discreteCopyNumberEventType",
            "in": "query",
            "description": "Type of the copy number event",
            "required": false,
            "type": "string",
            "default": "HOMDEL_AND_AMP",
            "allowEmptyValue": false,
            "enum": [
              "HOMDEL_AND_AMP",
              "HOMDEL",
              "AMP",
              "GAIN",
              "HETLOSS",
              "DIPLOID",
              "ALL"
            ]
          },
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID e.g. acc_tcga_gistic",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sampleListId",
            "in": "query",
            "description": "Sample List ID e.g. acc_tcga_all",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscreteCopyNumberData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-profiles/{molecularProfileId}/discrete-copy-number-counts/fetch": {
      "post": {
        "tags": [
          "Discrete Copy Number Alterations"
        ],
        "summary": "Get counts of specific genes and alterations within a CNA molecular profile",
        "operationId": "fetchCopyNumberCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "copyNumberCountIdentifiers",
            "description": "List of copy number count identifiers",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CopyNumberCountIdentifier"
              }
            }
          },
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID e.g. acc_tcga_gistic",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CopyNumberCount"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-profiles/{molecularProfileId}/discrete-copy-number/fetch": {
      "post": {
        "tags": [
          "Discrete Copy Number Alterations"
        ],
        "summary": "Fetch discrete copy number alterations in a molecular profile by sample ID",
        "operationId": "fetchDiscreteCopyNumbersInMolecularProfileUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "discreteCopyNumberEventType",
            "in": "query",
            "description": "Type of the copy number event",
            "required": false,
            "type": "string",
            "default": "HOMDEL_AND_AMP",
            "allowEmptyValue": false,
            "enum": [
              "HOMDEL_AND_AMP",
              "HOMDEL",
              "AMP",
              "GAIN",
              "HETLOSS",
              "DIPLOID",
              "ALL"
            ]
          },
          {
            "in": "body",
            "name": "discreteCopyNumberFilter",
            "description": "List of Sample IDs/Sample List ID and Entrez Gene IDs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiscreteCopyNumberFilter"
            }
          },
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID e.g. acc_tcga_gistic",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscreteCopyNumberData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-profiles/{molecularProfileId}/gene-panel-data/fetch": {
      "post": {
        "tags": [
          "Gene Panels"
        ],
        "summary": "Get gene panel data",
        "operationId": "getGenePanelDataUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "genePanelDataFilter",
            "description": "List of Sample IDs/Sample List ID and Entrez Gene IDs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenePanelDataFilter"
            }
          },
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID e.g. nsclc_unito_2016_mutations",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenePanelData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-profiles/{molecularProfileId}/molecular-data": {
      "get": {
        "tags": [
          "Molecular Data"
        ],
        "summary": "Get all molecular data in a molecular profile",
        "operationId": "getAllMolecularDataInMolecularProfileUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entrezGeneId",
            "in": "query",
            "description": "Entrez Gene ID e.g. 1",
            "required": true,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID e.g. acc_tcga_rna_seq_v2_mrna",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sampleListId",
            "in": "query",
            "description": "Sample List ID e.g. acc_tcga_all",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NumericGeneMolecularData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-profiles/{molecularProfileId}/molecular-data/fetch": {
      "post": {
        "tags": [
          "Molecular Data"
        ],
        "summary": "Fetch molecular data in a molecular profile",
        "operationId": "fetchAllMolecularDataInMolecularProfileUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "molecularDataFilter",
            "description": "List of Sample IDs/Sample List ID and Entrez Gene IDs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MolecularDataFilter"
            }
          },
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID e.g. acc_tcga_rna_seq_v2_mrna",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NumericGeneMolecularData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-profiles/{molecularProfileId}/mutations": {
      "get": {
        "tags": [
          "Mutations"
        ],
        "summary": "Get mutations in a molecular profile by Sample List ID",
        "operationId": "getMutationsInMolecularProfileBySampleListIdUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "entrezGeneId",
            "in": "query",
            "description": "Entrez Gene ID",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID e.g. acc_tcga_mutations",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sampleListId",
            "in": "query",
            "description": "Sample List ID e.g. acc_tcga_all",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "entrezGeneId",
              "center",
              "mutationStatus",
              "validationStatus",
              "tumorAltCount",
              "tumorRefCount",
              "normalAltCount",
              "normalRefCount",
              "aminoAcidChange",
              "startPosition",
              "endPosition",
              "referenceAllele",
              "variantAllele",
              "proteinChange",
              "mutationType",
              "ncbiBuild",
              "variantType",
              "refseqMrnaId",
              "proteinPosStart",
              "proteinPosEnd",
              "keyword"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Mutation"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-profiles/{molecularProfileId}/mutations/fetch": {
      "post": {
        "tags": [
          "Mutations"
        ],
        "summary": "Fetch mutations in a molecular profile",
        "operationId": "fetchMutationsInMolecularProfileUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID e.g. acc_tcga_mutations",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "mutationFilter",
            "description": "List of Sample IDs/Sample List ID and Entrez Gene IDs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MutationFilter"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "entrezGeneId",
              "center",
              "mutationStatus",
              "validationStatus",
              "tumorAltCount",
              "tumorRefCount",
              "normalAltCount",
              "normalRefCount",
              "aminoAcidChange",
              "startPosition",
              "endPosition",
              "referenceAllele",
              "variantAllele",
              "proteinChange",
              "mutationType",
              "ncbiBuild",
              "variantType",
              "refseqMrnaId",
              "proteinPosStart",
              "proteinPosEnd",
              "keyword"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Mutation"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/mutation-counts-by-position/fetch": {
      "post": {
        "tags": [
          "Mutations"
        ],
        "summary": "Fetch mutation counts in all studies by gene and position",
        "operationId": "fetchMutationCountsByPositionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "mutationPositionIdentifiers",
            "description": "List of gene and positions",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MutationPositionIdentifier"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MutationCountByPosition"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/mutations/fetch": {
      "post": {
        "tags": [
          "Mutations"
        ],
        "summary": "Fetch mutations in multiple molecular profiles by sample IDs",
        "operationId": "fetchMutationsInMultipleMolecularProfilesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "in": "body",
            "name": "mutationMultipleStudyFilter",
            "description": "List of Molecular Profile IDs or List of Molecular Profile ID / Sample ID pairs, and List of Entrez Gene IDs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MutationMultipleStudyFilter"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "entrezGeneId",
              "center",
              "mutationStatus",
              "validationStatus",
              "tumorAltCount",
              "tumorRefCount",
              "normalAltCount",
              "normalRefCount",
              "aminoAcidChange",
              "startPosition",
              "endPosition",
              "referenceAllele",
              "variantAllele",
              "proteinChange",
              "mutationType",
              "ncbiBuild",
              "variantType",
              "refseqMrnaId",
              "proteinPosStart",
              "proteinPosEnd",
              "keyword"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Mutation"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/patients": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Get all patients",
        "operationId": "getAllPatientsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword that applies to ID of the patients",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "patientId"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Patient"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/patients/fetch": {
      "post": {
        "tags": [
          "Patients"
        ],
        "summary": "fetchPatients",
        "operationId": "fetchPatientsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "patientFilter",
            "description": "List of patient identifiers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatientFilter"
            }
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Patient"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/reference-genome-genes/{genomeName}": {
      "get": {
        "tags": [
          "Reference Genome Genes"
        ],
        "summary": "Get all reference genes",
        "operationId": "getAllReferenceGenomeGenesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "genomeName",
            "in": "path",
            "description": "Name of Reference Genome hg19",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReferenceGenomeGene"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/reference-genome-genes/{genomeName}/fetch": {
      "post": {
        "tags": [
          "Reference Genome Genes"
        ],
        "summary": "Fetch genes of reference genome of interest",
        "operationId": "fetchReferenceGenomeGenesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "geneIds",
            "description": "List of Entrez Gene IDs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "genomeName",
            "in": "path",
            "description": "Name of Reference Genome hg19",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReferenceGenomeGene"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/reference-genome-genes/{genomeName}/{geneId}": {
      "get": {
        "tags": [
          "Reference Genome Genes"
        ],
        "summary": "Get a gene of a reference genome of interest",
        "operationId": "getReferenceGenomeGeneUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "geneId",
            "in": "path",
            "description": "Entrez Gene ID 207",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "genomeName",
            "in": "path",
            "description": "Name of Reference Genome hg19",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReferenceGenomeGene"
            }
          }
        },
        "deprecated": false
      }
    },
    "/sample-lists": {
      "get": {
        "tags": [
          "Sample Lists"
        ],
        "summary": "Get all sample lists",
        "operationId": "getAllSampleListsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "sampleListId",
              "category",
              "studyId",
              "name",
              "description"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SampleList"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/sample-lists/fetch": {
      "post": {
        "tags": [
          "Sample Lists"
        ],
        "summary": "Fetch sample lists by ID",
        "operationId": "fetchSampleListsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "in": "body",
            "name": "sampleListIds",
            "description": "List of sample list IDs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SampleList"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/sample-lists/{sampleListId}": {
      "get": {
        "tags": [
          "Sample Lists"
        ],
        "summary": "Get sample list",
        "operationId": "getSampleListUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sampleListId",
            "in": "path",
            "description": "Sample List ID e.g. acc_tcga_all",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SampleList"
            }
          }
        },
        "deprecated": false
      }
    },
    "/sample-lists/{sampleListId}/sample-ids": {
      "get": {
        "tags": [
          "Sample Lists"
        ],
        "summary": "Get all sample IDs in a sample list",
        "operationId": "getAllSampleIdsInSampleListUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sampleListId",
            "in": "path",
            "description": "Sample List ID e.g. acc_tcga_all",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/samples": {
      "get": {
        "tags": [
          "Samples"
        ],
        "summary": "Get all samples matching keyword",
        "operationId": "getSamplesByKeywordUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword that applies to the study ID",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "sampleId",
              "sampleType"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sample"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/samples/fetch": {
      "post": {
        "tags": [
          "Samples"
        ],
        "summary": "Fetch samples by ID",
        "operationId": "fetchSamplesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "in": "body",
            "name": "sampleFilter",
            "description": "List of sample identifiers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SampleFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sample"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/structuralvariant/fetch": {
      "post": {
        "tags": [
          "Structural Variants"
        ],
        "summary": "Fetch structural variants for entrezGeneIds and molecularProfileIds or sampleMolecularIdentifiers",
        "operationId": "fetchStructuralVariantsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entrezGeneIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "molecularProfileIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "maximum": 10000000,
            "minimum": 1
          },
          {
            "name": "sampleMolecularIdentifiers[0].molecularProfileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sampleMolecularIdentifiers[0].sampleId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "structuralVariantFilter",
            "description": "List of entrezGeneIds and molecularProfileIds or sampleMolecularIdentifiers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StructuralVariantFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StructuralVariant"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies": {
      "get": {
        "tags": [
          "Studies"
        ],
        "summary": "Get all studies",
        "operationId": "getAllStudiesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword that applies to name and cancer type of the studies",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "studyId",
              "cancerTypeId",
              "name",
              "shortName",
              "description",
              "publicStudy",
              "pmid",
              "citation",
              "groups",
              "status",
              "importDate"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CancerStudy"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/fetch": {
      "post": {
        "tags": [
          "Studies"
        ],
        "summary": "Fetch studies by IDs",
        "operationId": "fetchStudiesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "in": "body",
            "name": "studyIds",
            "description": "List of Study IDs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CancerStudy"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/tags/fetch": {
      "post": {
        "tags": [
          "Studies"
        ],
        "summary": "Get the study tags by IDs",
        "operationId": "getTagsForMultipleStudiesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "studyIds",
            "description": "List of Study IDs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CancerStudyTags"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}": {
      "get": {
        "tags": [
          "Studies"
        ],
        "summary": "Get a study",
        "operationId": "getStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CancerStudy"
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/clinical-attributes": {
      "get": {
        "tags": [
          "Clinical Attributes"
        ],
        "summary": "Get all clinical attributes in the specified study",
        "operationId": "getAllClinicalAttributesInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "clinicalAttributeId",
              "displayName",
              "description",
              "datatype",
              "patientAttribute",
              "priority",
              "studyId"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalAttribute"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/clinical-attributes/{clinicalAttributeId}": {
      "get": {
        "tags": [
          "Clinical Attributes"
        ],
        "summary": "Get specified clinical attribute",
        "operationId": "getClinicalAttributeInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clinicalAttributeId",
            "in": "path",
            "description": "Clinical Attribute ID e.g. CANCER_TYPE",
            "required": true,
            "type": "string"
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClinicalAttribute"
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/clinical-data": {
      "get": {
        "tags": [
          "Clinical Data"
        ],
        "summary": "Get all clinical data in a study",
        "operationId": "getAllClinicalDataInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attributeId",
            "in": "query",
            "description": "Attribute ID e.g. CANCER_TYPE",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "clinicalDataType",
            "in": "query",
            "description": "Type of the clinical data",
            "required": false,
            "type": "string",
            "default": "SAMPLE",
            "allowEmptyValue": false,
            "enum": [
              "SAMPLE",
              "PATIENT"
            ]
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "clinicalAttributeId",
              "value"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/clinical-data/fetch": {
      "post": {
        "tags": [
          "Clinical Data"
        ],
        "summary": "Fetch clinical data by patient IDs or sample IDs (specific study)",
        "operationId": "fetchAllClinicalDataInStudyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clinicalDataSingleStudyFilter",
            "description": "List of patient or sample IDs and attribute IDs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClinicalDataSingleStudyFilter"
            }
          },
          {
            "name": "clinicalDataType",
            "in": "query",
            "description": "Type of the clinical data",
            "required": false,
            "type": "string",
            "default": "SAMPLE",
            "allowEmptyValue": false,
            "enum": [
              "SAMPLE",
              "PATIENT"
            ]
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/clinical-events": {
      "get": {
        "tags": [
          "Clinical Events"
        ],
        "summary": "Get all clinical events in a study",
        "operationId": "getAllClinicalEventsInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "eventType",
              "startNumberOfDaysSinceDiagnosis",
              "endNumberOfDaysSinceDiagnosis"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. lgg_ucsf_2014",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalEvent"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/molecular-profiles": {
      "get": {
        "tags": [
          "Molecular Profiles"
        ],
        "summary": "Get all molecular profiles in a study",
        "operationId": "getAllMolecularProfilesInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "molecularProfileId",
              "molecularAlterationType",
              "datatype",
              "name",
              "description",
              "showProfileInAnalysisTab"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MolecularProfile"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/patients": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Get all patients in a study",
        "operationId": "getAllPatientsInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "patientId"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Patient"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/patients/{patientId}": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Get a patient in a study",
        "operationId": "getPatientInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "description": "Patient ID e.g. TCGA-OR-A5J2",
            "required": true,
            "type": "string"
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Patient"
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/patients/{patientId}/clinical-data": {
      "get": {
        "tags": [
          "Clinical Data"
        ],
        "summary": "Get all clinical data of a patient in a study",
        "operationId": "getAllClinicalDataOfPatientInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attributeId",
            "in": "query",
            "description": "Attribute ID e.g. AGE",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "patientId",
            "in": "path",
            "description": "Patient ID e.g. TCGA-OR-A5J2",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "clinicalAttributeId",
              "value"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/patients/{patientId}/clinical-events": {
      "get": {
        "tags": [
          "Clinical Events"
        ],
        "summary": "Get all clinical events of a patient in a study",
        "operationId": "getAllClinicalEventsOfPatientInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "patientId",
            "in": "path",
            "description": "Patient ID e.g. P01",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "eventType",
              "startNumberOfDaysSinceDiagnosis",
              "endNumberOfDaysSinceDiagnosis"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. lgg_ucsf_2014",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalEvent"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/patients/{patientId}/resource-data": {
      "get": {
        "tags": [
          "Resource Data"
        ],
        "summary": "Get all resource data of a patient in a study",
        "operationId": "getAllResourceDataOfPatientInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "patientId",
            "in": "path",
            "description": "Patient ID e.g. TCGA-OR-A5J2",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "resourceId",
            "in": "query",
            "description": "Resource ID",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "ResourceId",
              "url"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/patients/{patientId}/samples": {
      "get": {
        "tags": [
          "Samples"
        ],
        "summary": "Get all samples of a patient in a study",
        "operationId": "getAllSamplesOfPatientInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "patientId",
            "in": "path",
            "description": "Patient ID e.g. TCGA-OR-A5J2",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "sampleId",
              "sampleType"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sample"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/resource-data": {
      "get": {
        "tags": [
          "Resource Data"
        ],
        "summary": "Get all resource data for a study",
        "operationId": "getAllStudyResourceDataInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "resourceId",
            "in": "query",
            "description": "Resource ID",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "ResourceId",
              "url"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/resource-definitions": {
      "get": {
        "tags": [
          "Resource Definitions"
        ],
        "summary": "Get all resoruce definitions in the specified study",
        "operationId": "getAllResourceDefinitionsInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "resourceId",
              "displayName",
              "description",
              "resourceType",
              "priority",
              "openByDefault",
              "studyId"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceDefinition"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/resource-definitions/{resourceId}": {
      "get": {
        "tags": [
          "Resource Definitions"
        ],
        "summary": "Get specified resource definition",
        "operationId": "getResourceDefinitionInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "description": "Resource ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceDefinition"
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/sample-lists": {
      "get": {
        "tags": [
          "Sample Lists"
        ],
        "summary": "Get all sample lists in a study",
        "operationId": "getAllSampleListsInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "sampleListId",
              "category",
              "studyId",
              "name",
              "description"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SampleList"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/samples": {
      "get": {
        "tags": [
          "Samples"
        ],
        "summary": "Get all samples in a study",
        "operationId": "getAllSamplesInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "sampleId",
              "sampleType"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sample"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/samples/{sampleId}": {
      "get": {
        "tags": [
          "Samples"
        ],
        "summary": "Get a sample in a study",
        "operationId": "getSampleInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sampleId",
            "in": "path",
            "description": "Sample ID e.g. TCGA-OR-A5J2-01",
            "required": true,
            "type": "string"
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Sample"
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/samples/{sampleId}/clinical-data": {
      "get": {
        "tags": [
          "Clinical Data"
        ],
        "summary": "Get all clinical data of a sample in a study",
        "operationId": "getAllClinicalDataOfSampleInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attributeId",
            "in": "query",
            "description": "Attribute ID e.g. CANCER_TYPE",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sampleId",
            "in": "path",
            "description": "Sample ID e.g. TCGA-OR-A5J2-01",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "clinicalAttributeId",
              "value"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/samples/{sampleId}/copy-number-segments": {
      "get": {
        "tags": [
          "Copy Number Segments"
        ],
        "summary": "Get copy number segments in a sample in a study",
        "operationId": "getCopyNumberSegmentsInSampleInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chromosome",
            "in": "query",
            "description": "Chromosome",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 20000,
            "maximum": 20000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sampleId",
            "in": "path",
            "description": "Sample ID e.g. TCGA-OR-A5J2-01",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "chromosome",
              "start",
              "end",
              "numberOfProbes",
              "segmentMean"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CopyNumberSeg"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/samples/{sampleId}/resource-data": {
      "get": {
        "tags": [
          "Resource Data"
        ],
        "summary": "Get all resource data of a sample in a study",
        "operationId": "getAllResourceDataOfSampleInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "resourceId",
            "in": "query",
            "description": "Resource ID",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "sampleId",
            "in": "path",
            "description": "Sample ID e.g. TCGA-OR-A5J2-01",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "ResourceId",
              "url"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/tags": {
      "get": {
        "tags": [
          "Studies"
        ],
        "summary": "Get the tags of a study",
        "operationId": "getTagsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "AlleleSpecificCopyNumber": {
      "type": "object",
      "properties": {
        "ascnIntegerCopyNumber": {
          "type": "integer",
          "format": "int32"
        },
        "ascnMethod": {
          "type": "string"
        },
        "ccfExpectedCopies": {
          "type": "number",
          "format": "float"
        },
        "ccfExpectedCopiesUpper": {
          "type": "number",
          "format": "float"
        },
        "clonal": {
          "type": "string"
        },
        "expectedAltCopies": {
          "type": "integer",
          "format": "int32"
        },
        "minorCopyNumber": {
          "type": "integer",
          "format": "int32"
        },
        "totalCopyNumber": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AlleleSpecificCopyNumber"
    },
    "CancerStudy": {
      "type": "object",
      "required": [
        "studyId"
      ],
      "properties": {
        "allSampleCount": {
          "type": "integer",
          "format": "int32"
        },
        "cancerType": {
          "$ref": "#/definitions/TypeOfCancer"
        },
        "cancerTypeId": {
          "type": "string"
        },
        "citation": {
          "type": "string"
        },
        "cnaSampleCount": {
          "type": "integer",
          "format": "int32"
        },
        "completeSampleCount": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "groups": {
          "type": "string"
        },
        "importDate": {
          "type": "string",
          "example": "yyyy-MM-dd HH:mm:ss"
        },
        "methylationHm27SampleCount": {
          "type": "integer",
          "format": "int32"
        },
        "miRnaSampleCount": {
          "type": "integer",
          "format": "int32"
        },
        "mrnaMicroarraySampleCount": {
          "type": "integer",
          "format": "int32"
        },
        "mrnaRnaSeqSampleCount": {
          "type": "integer",
          "format": "int32"
        },
        "mrnaRnaSeqV2SampleCount": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "pmid": {
          "type": "string"
        },
        "publicStudy": {
          "type": "boolean"
        },
        "referenceGenome": {
          "type": "string"
        },
        "rppaSampleCount": {
          "type": "integer",
          "format": "int32"
        },
        "sequencedSampleCount": {
          "type": "integer",
          "format": "int32"
        },
        "shortName": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "studyId": {
          "type": "string"
        }
      },
      "title": "CancerStudy"
    },
    "CancerStudyTags": {
      "type": "object",
      "properties": {
        "cancerStudyId": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "string"
        }
      },
      "title": "CancerStudyTags"
    },
    "ClinicalAttribute": {
      "type": "object",
      "required": [
        "clinicalAttributeId",
        "displayName",
        "patientAttribute",
        "studyId"
      ],
      "properties": {
        "clinicalAttributeId": {
          "type": "string"
        },
        "datatype": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "patientAttribute": {
          "type": "boolean"
        },
        "priority": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        }
      },
      "title": "ClinicalAttribute"
    },
    "ClinicalAttributeCount": {
      "type": "object",
      "properties": {
        "clinicalAttributeId": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ClinicalAttributeCount"
    },
    "ClinicalAttributeCountFilter": {
      "type": "object",
      "properties": {
        "sampleIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleIdentifier"
          }
        },
        "sampleListId": {
          "type": "string"
        }
      },
      "title": "ClinicalAttributeCountFilter"
    },
    "ClinicalData": {
      "type": "object",
      "required": [
        "clinicalAttributeId",
        "patientId",
        "studyId"
      ],
      "properties": {
        "clinicalAttribute": {
          "$ref": "#/definitions/ClinicalAttribute"
        },
        "clinicalAttributeId": {
          "type": "string"
        },
        "patientId": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "ClinicalData"
    },
    "ClinicalDataIdentifier": {
      "type": "object",
      "properties": {
        "entityId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        }
      },
      "title": "ClinicalDataIdentifier"
    },
    "ClinicalDataMultiStudyFilter": {
      "type": "object",
      "properties": {
        "attributeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "identifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalDataIdentifier"
          }
        }
      },
      "title": "ClinicalDataMultiStudyFilter"
    },
    "ClinicalDataSingleStudyFilter": {
      "type": "object",
      "properties": {
        "attributeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ClinicalDataSingleStudyFilter"
    },
    "ClinicalEvent": {
      "type": "object",
      "required": [
        "eventType",
        "patientId",
        "studyId"
      ],
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalEventData"
          }
        },
        "endNumberOfDaysSinceDiagnosis": {
          "type": "integer",
          "format": "int32"
        },
        "eventType": {
          "type": "string"
        },
        "patientId": {
          "type": "string"
        },
        "startNumberOfDaysSinceDiagnosis": {
          "type": "integer",
          "format": "int32"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        }
      },
      "title": "ClinicalEvent"
    },
    "ClinicalEventData": {
      "type": "object",
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "ClinicalEventData"
    },
    "CopyNumberCount": {
      "type": "object",
      "required": [
        "alteration",
        "entrezGeneId",
        "molecularProfileId",
        "numberOfSamples",
        "numberOfSamplesWithAlterationInGene"
      ],
      "properties": {
        "alteration": {
          "type": "integer",
          "format": "int32"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "molecularProfileId": {
          "type": "string"
        },
        "numberOfSamples": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfSamplesWithAlterationInGene": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "CopyNumberCount"
    },
    "CopyNumberCountIdentifier": {
      "type": "object",
      "properties": {
        "alteration": {
          "type": "integer",
          "format": "int32"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "CopyNumberCountIdentifier"
    },
    "CopyNumberSeg": {
      "type": "object",
      "required": [
        "chromosome",
        "end",
        "numberOfProbes",
        "patientId",
        "sampleId",
        "segmentMean",
        "start",
        "studyId"
      ],
      "properties": {
        "chromosome": {
          "type": "string"
        },
        "end": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfProbes": {
          "type": "integer",
          "format": "int32"
        },
        "patientId": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        },
        "segmentMean": {
          "type": "number"
        },
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        }
      },
      "title": "CopyNumberSeg"
    },
    "DiscreteCopyNumberData": {
      "type": "object",
      "required": [
        "alteration",
        "entrezGeneId",
        "molecularProfileId",
        "patientId",
        "sampleId",
        "studyId"
      ],
      "properties": {
        "alteration": {
          "type": "integer",
          "format": "int32"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "gene": {
          "$ref": "#/definitions/Gene"
        },
        "molecularProfileId": {
          "type": "string"
        },
        "patientId": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        }
      },
      "title": "DiscreteCopyNumberData"
    },
    "DiscreteCopyNumberFilter": {
      "type": "object",
      "properties": {
        "entrezGeneIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 50000
          }
        },
        "sampleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleListId": {
          "type": "string"
        }
      },
      "title": "DiscreteCopyNumberFilter"
    },
    "Gene": {
      "type": "object",
      "required": [
        "entrezGeneId",
        "geneticEntityId",
        "hugoGeneSymbol"
      ],
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "geneticEntityId": {
          "type": "integer",
          "format": "int32"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "Gene"
    },
    "GenePanel": {
      "type": "object",
      "required": [
        "genePanelId"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "genePanelId": {
          "type": "string"
        },
        "genes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenePanelToGene"
          }
        }
      },
      "title": "GenePanel"
    },
    "GenePanelData": {
      "type": "object",
      "required": [
        "molecularProfileId",
        "patientId",
        "profiled",
        "sampleId",
        "studyId"
      ],
      "properties": {
        "genePanelId": {
          "type": "string"
        },
        "molecularProfileId": {
          "type": "string"
        },
        "patientId": {
          "type": "string"
        },
        "profiled": {
          "type": "boolean"
        },
        "sampleId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        }
      },
      "title": "GenePanelData"
    },
    "GenePanelDataFilter": {
      "type": "object",
      "properties": {
        "sampleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleListId": {
          "type": "string"
        }
      },
      "title": "GenePanelDataFilter"
    },
    "GenePanelToGene": {
      "type": "object",
      "required": [
        "entrezGeneId",
        "hugoGeneSymbol"
      ],
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "hugoGeneSymbol": {
          "type": "string"
        }
      },
      "title": "GenePanelToGene"
    },
    "GenericAssayData": {
      "type": "object",
      "required": [
        "genericAssayStableId",
        "molecularProfileId",
        "patientId",
        "sampleId",
        "studyId",
        "value"
      ],
      "properties": {
        "genericAssayStableId": {
          "type": "string"
        },
        "molecularProfileId": {
          "type": "string"
        },
        "patientId": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        },
        "stableId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "GenericAssayData"
    },
    "GenericAssayDataFilter": {
      "type": "object",
      "properties": {
        "genericAssayStableIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleListId": {
          "type": "string"
        }
      },
      "title": "GenericAssayDataFilter"
    },
    "GenericAssayDataMultipleStudyFilter": {
      "type": "object",
      "properties": {
        "genericAssayStableIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "molecularProfileIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleMolecularIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleMolecularIdentifier"
          }
        }
      },
      "title": "GenericAssayDataMultipleStudyFilter"
    },
    "GenericAssayMeta": {
      "type": "object",
      "properties": {
        "entityType": {
          "type": "string"
        },
        "genericEntityMetaProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "stableId": {
          "type": "string"
        }
      },
      "title": "GenericAssayMeta"
    },
    "GenericAssayMetaFilter": {
      "type": "object",
      "properties": {
        "genericAssayStableIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "molecularProfileIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "GenericAssayMetaFilter"
    },
    "MolecularDataFilter": {
      "type": "object",
      "properties": {
        "entrezGeneIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 10000000
          }
        },
        "sampleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleListId": {
          "type": "string"
        }
      },
      "title": "MolecularDataFilter"
    },
    "MolecularDataMultipleStudyFilter": {
      "type": "object",
      "properties": {
        "entrezGeneIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 10000000
          }
        },
        "molecularProfileIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleMolecularIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleMolecularIdentifier"
          }
        }
      },
      "title": "MolecularDataMultipleStudyFilter"
    },
    "MolecularProfile": {
      "type": "object",
      "required": [
        "molecularProfileId",
        "studyId"
      ],
      "properties": {
        "datatype": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "genericAssayType": {
          "type": "string"
        },
        "molecularAlterationType": {
          "type": "string",
          "enum": [
            "MUTATION_EXTENDED",
            "MUTATION_UNCALLED",
            "FUSION",
            "STRUCTURAL_VARIANT",
            "COPY_NUMBER_ALTERATION",
            "MICRO_RNA_EXPRESSION",
            "MRNA_EXPRESSION",
            "MRNA_EXPRESSION_NORMALS",
            "RNA_EXPRESSION",
            "METHYLATION",
            "METHYLATION_BINARY",
            "PHOSPHORYLATION",
            "PROTEIN_LEVEL",
            "PROTEIN_ARRAY_PROTEIN_LEVEL",
            "PROTEIN_ARRAY_PHOSPHORYLATION",
            "GENESET_SCORE",
            "GENERIC_ASSAY"
          ]
        },
        "molecularProfileId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pivotThreshold": {
          "type": "number",
          "format": "float"
        },
        "showProfileInAnalysisTab": {
          "type": "boolean"
        },
        "sortOrder": {
          "type": "string"
        },
        "study": {
          "$ref": "#/definitions/CancerStudy"
        },
        "studyId": {
          "type": "string"
        }
      },
      "title": "MolecularProfile"
    },
    "MolecularProfileFilter": {
      "type": "object",
      "properties": {
        "molecularProfileIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "studyIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "MolecularProfileFilter"
    },
    "Mutation": {
      "type": "object",
      "required": [
        "entrezGeneId",
        "molecularProfileId",
        "patientId",
        "sampleId",
        "studyId"
      ],
      "properties": {
        "alleleSpecificCopyNumber": {
          "$ref": "#/definitions/AlleleSpecificCopyNumber"
        },
        "aminoAcidChange": {
          "type": "string"
        },
        "center": {
          "type": "string"
        },
        "chr": {
          "type": "string"
        },
        "driverFilter": {
          "type": "string"
        },
        "driverFilterAnnotation": {
          "type": "string"
        },
        "driverTiersFilter": {
          "type": "string"
        },
        "driverTiersFilterAnnotation": {
          "type": "string"
        },
        "endPosition": {
          "type": "integer",
          "format": "int64"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "fisValue": {
          "type": "number"
        },
        "functionalImpactScore": {
          "type": "string"
        },
        "gene": {
          "$ref": "#/definitions/Gene"
        },
        "keyword": {
          "type": "string"
        },
        "linkMsa": {
          "type": "string"
        },
        "linkPdb": {
          "type": "string"
        },
        "linkXvar": {
          "type": "string"
        },
        "molecularProfileId": {
          "type": "string"
        },
        "mutationStatus": {
          "type": "string"
        },
        "mutationType": {
          "type": "string"
        },
        "ncbiBuild": {
          "type": "string"
        },
        "normalAltCount": {
          "type": "integer",
          "format": "int32"
        },
        "normalRefCount": {
          "type": "integer",
          "format": "int32"
        },
        "patientId": {
          "type": "string"
        },
        "proteinChange": {
          "type": "string"
        },
        "proteinPosEnd": {
          "type": "integer",
          "format": "int32"
        },
        "proteinPosStart": {
          "type": "integer",
          "format": "int32"
        },
        "referenceAllele": {
          "type": "string"
        },
        "refseqMrnaId": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        },
        "startPosition": {
          "type": "integer",
          "format": "int64"
        },
        "studyId": {
          "type": "string"
        },
        "tumorAltCount": {
          "type": "integer",
          "format": "int32"
        },
        "tumorRefCount": {
          "type": "integer",
          "format": "int32"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        },
        "validationStatus": {
          "type": "string"
        },
        "variantAllele": {
          "type": "string"
        },
        "variantType": {
          "type": "string"
        }
      },
      "title": "Mutation"
    },
    "MutationCountByPosition": {
      "type": "object",
      "required": [
        "count",
        "entrezGeneId",
        "proteinPosEnd",
        "proteinPosStart"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "proteinPosEnd": {
          "type": "integer",
          "format": "int32"
        },
        "proteinPosStart": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "MutationCountByPosition"
    },
    "MutationFilter": {
      "type": "object",
      "properties": {
        "entrezGeneIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 10000000
          }
        },
        "sampleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleListId": {
          "type": "string"
        }
      },
      "title": "MutationFilter"
    },
    "MutationMultipleStudyFilter": {
      "type": "object",
      "properties": {
        "entrezGeneIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 10000000
          }
        },
        "molecularProfileIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleMolecularIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleMolecularIdentifier"
          }
        }
      },
      "title": "MutationMultipleStudyFilter"
    },
    "MutationPositionIdentifier": {
      "type": "object",
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "proteinPosEnd": {
          "type": "integer",
          "format": "int32"
        },
        "proteinPosStart": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "MutationPositionIdentifier"
    },
    "NumericGeneMolecularData": {
      "type": "object",
      "required": [
        "entrezGeneId",
        "molecularProfileId",
        "patientId",
        "sampleId",
        "studyId",
        "value"
      ],
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "gene": {
          "$ref": "#/definitions/Gene"
        },
        "molecularProfileId": {
          "type": "string"
        },
        "patientId": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        },
        "value": {
          "type": "number"
        }
      },
      "title": "NumericGeneMolecularData"
    },
    "Patient": {
      "type": "object",
      "required": [
        "patientId",
        "studyId"
      ],
      "properties": {
        "cancerStudy": {
          "$ref": "#/definitions/CancerStudy"
        },
        "patientId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        }
      },
      "title": "Patient"
    },
    "PatientFilter": {
      "type": "object",
      "properties": {
        "patientIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatientIdentifier"
          }
        },
        "uniquePatientKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "PatientFilter"
    },
    "PatientIdentifier": {
      "type": "object",
      "properties": {
        "patientId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        }
      },
      "title": "PatientIdentifier"
    },
    "ReferenceGenomeGene": {
      "type": "object",
      "required": [
        "entrezGeneId",
        "referenceGenomeId"
      ],
      "properties": {
        "chromosome": {
          "type": "string"
        },
        "cytoband": {
          "type": "string"
        },
        "end": {
          "type": "integer",
          "format": "int64"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "length": {
          "type": "integer",
          "format": "int32"
        },
        "referenceGenomeId": {
          "type": "integer",
          "format": "int32"
        },
        "start": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ReferenceGenomeGene"
    },
    "ResourceData": {
      "type": "object",
      "required": [
        "resourceId",
        "studyId",
        "url"
      ],
      "properties": {
        "patientId": {
          "type": "string"
        },
        "resourceDefinition": {
          "$ref": "#/definitions/ResourceDefinition"
        },
        "resourceId": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "title": "ResourceData"
    },
    "ResourceDefinition": {
      "type": "object",
      "required": [
        "displayName",
        "resourceId",
        "resourceType",
        "studyId"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "openByDefault": {
          "type": "boolean"
        },
        "priority": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string",
          "enum": [
            "STUDY",
            "SAMPLE",
            "PATIENT"
          ]
        },
        "studyId": {
          "type": "string"
        }
      },
      "title": "ResourceDefinition"
    },
    "Sample": {
      "type": "object",
      "required": [
        "patientId",
        "sampleId",
        "studyId"
      ],
      "properties": {
        "copyNumberSegmentPresent": {
          "type": "boolean"
        },
        "patientId": {
          "type": "string"
        },
        "profiledForFusions": {
          "type": "boolean"
        },
        "sampleId": {
          "type": "string"
        },
        "sampleType": {
          "type": "string",
          "enum": [
            "Primary Solid Tumor",
            "Recurrent Solid Tumor",
            "Primary Blood Tumor",
            "Recurrent Blood Tumor",
            "Metastatic",
            "Blood Derived Normal",
            "Solid Tissues Normal"
          ]
        },
        "sequenced": {
          "type": "boolean"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        }
      },
      "title": "Sample"
    },
    "SampleFilter": {
      "type": "object",
      "properties": {
        "sampleIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleIdentifier"
          }
        },
        "sampleListIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uniqueSampleKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "SampleFilter"
    },
    "SampleIdentifier": {
      "type": "object",
      "properties": {
        "sampleId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        }
      },
      "title": "SampleIdentifier"
    },
    "SampleList": {
      "type": "object",
      "required": [
        "sampleListId"
      ],
      "properties": {
        "category": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "sampleCount": {
          "type": "integer",
          "format": "int32"
        },
        "sampleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleListId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        }
      },
      "title": "SampleList"
    },
    "SampleMolecularIdentifier": {
      "type": "object",
      "properties": {
        "molecularProfileId": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        }
      },
      "title": "SampleMolecularIdentifier"
    },
    "StructuralVariant": {
      "type": "object",
      "properties": {
        "annotation": {
          "type": "string"
        },
        "breakpointType": {
          "type": "string"
        },
        "center": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "connectionType": {
          "type": "string"
        },
        "dnaSupport": {
          "type": "string"
        },
        "driverFilter": {
          "type": "string"
        },
        "driverFilterAnn": {
          "type": "string"
        },
        "driverTiersFilter": {
          "type": "string"
        },
        "driverTiersFilterAnn": {
          "type": "string"
        },
        "eventInfo": {
          "type": "string"
        },
        "externalAnnotation": {
          "type": "string"
        },
        "length": {
          "type": "integer",
          "format": "int32"
        },
        "molecularProfileId": {
          "type": "string"
        },
        "ncbiBuild": {
          "type": "string"
        },
        "normalPairedEndReadCount": {
          "type": "integer",
          "format": "int32"
        },
        "normalReadCount": {
          "type": "integer",
          "format": "int32"
        },
        "normalSplitReadCount": {
          "type": "integer",
          "format": "int32"
        },
        "normalVariantCount": {
          "type": "integer",
          "format": "int32"
        },
        "patientId": {
          "type": "string"
        },
        "rnaSupport": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        },
        "sampleIdInternal": {
          "type": "integer",
          "format": "int32"
        },
        "site1Chromosome": {
          "type": "string"
        },
        "site1Description": {
          "type": "string"
        },
        "site1EnsemblTranscriptId": {
          "type": "string"
        },
        "site1EntrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "site1Exon": {
          "type": "integer",
          "format": "int32"
        },
        "site1HugoSymbol": {
          "type": "string"
        },
        "site1Position": {
          "type": "integer",
          "format": "int32"
        },
        "site2Chromosome": {
          "type": "string"
        },
        "site2Description": {
          "type": "string"
        },
        "site2EffectOnFrame": {
          "type": "string"
        },
        "site2EnsemblTranscriptId": {
          "type": "string"
        },
        "site2EntrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "site2Exon": {
          "type": "integer",
          "format": "int32"
        },
        "site2HugoSymbol": {
          "type": "string"
        },
        "site2Position": {
          "type": "integer",
          "format": "int32"
        },
        "structuralVariantId": {
          "type": "integer",
          "format": "int64"
        },
        "studyId": {
          "type": "string"
        },
        "tumorPairedEndReadCount": {
          "type": "integer",
          "format": "int32"
        },
        "tumorReadCount": {
          "type": "integer",
          "format": "int32"
        },
        "tumorSplitReadCount": {
          "type": "integer",
          "format": "int32"
        },
        "tumorVariantCount": {
          "type": "integer",
          "format": "int32"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        },
        "variantClass": {
          "type": "string"
        }
      },
      "title": "StructuralVariant"
    },
    "StructuralVariantFilter": {
      "type": "object",
      "properties": {
        "entrezGeneIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "molecularProfileIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleMolecularIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleMolecularIdentifier"
          }
        }
      },
      "title": "StructuralVariantFilter"
    },
    "TypeOfCancer": {
      "type": "object",
      "required": [
        "cancerTypeId"
      ],
      "properties": {
        "cancerTypeId": {
          "type": "string"
        },
        "clinicalTrialKeywords": {
          "type": "string"
        },
        "dedicatedColor": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        }
      },
      "title": "TypeOfCancer"
    }
  }
}
