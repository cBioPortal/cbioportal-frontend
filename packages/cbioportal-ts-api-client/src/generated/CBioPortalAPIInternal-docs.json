{
  "swagger": "2.0",
  "info": {
    "description": "A web service for supplying JSON formatted data to cBioPortal clients. Please note that this API is currently in beta and subject to change.",
    "version": "1.0 (beta)",
    "title": "cBioPortal web API [Beta]",
    "contact": {
      "name": "cBioPortal",
      "url": "https://www.cbioportal.org",
      "email": "cbioportal@googlegroups.com"
    },
    "license": {
      "name": "License",
      "url": "https://github.com/cBioPortal/cbioportal/blob/master/LICENSE"
    }
  },
  "tags": [
    {
      "name": "Clinical Data Enrichments",
      "description": " "
    },
    {
      "name": "Co-Expressions",
      "description": " "
    },
    {
      "name": "Copy Number Enrichments",
      "description": " "
    },
    {
      "name": "Cosmic Counts",
      "description": " "
    },
    {
      "name": "Data Access Tokens",
      "description": " "
    },
    {
      "name": "Expression Enrichments",
      "description": " "
    },
    {
      "name": "Gene Set Correlation",
      "description": " "
    },
    {
      "name": "Gene Set Hierarchy",
      "description": " "
    },
    {
      "name": "Gene Set Scores",
      "description": " "
    },
    {
      "name": "Gene Sets",
      "description": " "
    },
    {
      "name": "Info",
      "description": " "
    },
    {
      "name": "Mutation Enrichments",
      "description": " "
    },
    {
      "name": "Mutation Spectrums",
      "description": " "
    },
    {
      "name": "Server running status",
      "description": "This end point does not require authentication"
    },
    {
      "name": "Significant Copy Number Regions",
      "description": " "
    },
    {
      "name": "Significantly Mutated Genes",
      "description": " "
    },
    {
      "name": "Study View",
      "description": " "
    },
    {
      "name": "Timestamps",
      "description": " "
    },
    {
      "name": "Variant Counts",
      "description": " "
    },
    {
      "name": "mRNA Percentile",
      "description": " "
    }
  ],
  "paths": {
    "/clinical-data-bin-counts/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch clinical data bin counts by study view filter",
        "operationId": "fetchClinicalDataBinCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clinicalDataBinCountFilter",
            "description": "Clinical data bin count filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClinicalDataBinCountFilter"
            }
          },
          {
            "name": "dataBinMethod",
            "in": "query",
            "description": "Method for data binning",
            "required": false,
            "type": "string",
            "default": "DYNAMIC",
            "allowEmptyValue": false,
            "enum": [
              "STATIC",
              "DYNAMIC"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalDataBin"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/clinical-data-counts/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch clinical data counts by study view filter",
        "operationId": "fetchClinicalDataCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clinicalDataCountFilter",
            "description": "Clinical data count filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClinicalDataCountFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalDataCountItem"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/clinical-data-density-plot/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch clinical data density plot bins by study view filter",
        "operationId": "fetchClinicalDataDensityPlotUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          },
          {
            "name": "xAxisAttributeId",
            "in": "query",
            "description": "Clinical Attribute ID of the X axis",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "xAxisBinCount",
            "in": "query",
            "description": "Number of the bins in X axis",
            "required": false,
            "type": "integer",
            "default": 50,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "xAxisEnd",
            "in": "query",
            "description": "Starting point of the X axis, if different than largest value",
            "required": false,
            "type": "number",
            "allowEmptyValue": false
          },
          {
            "name": "xAxisStart",
            "in": "query",
            "description": "Starting point of the X axis, if different than smallest value",
            "required": false,
            "type": "number",
            "allowEmptyValue": false
          },
          {
            "name": "yAxisAttributeId",
            "in": "query",
            "description": "Clinical Attribute ID of the Y axis",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "yAxisBinCount",
            "in": "query",
            "description": "Number of the bins in Y axis",
            "required": false,
            "type": "integer",
            "default": 50,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "yAxisEnd",
            "in": "query",
            "description": "Starting point of the Y axis, if different than largest value",
            "required": false,
            "type": "number",
            "allowEmptyValue": false
          },
          {
            "name": "yAxisStart",
            "in": "query",
            "description": "Starting point of the Y axis, if different than smallest value",
            "required": false,
            "type": "number",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DensityPlotBin"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/clinical-data-enrichments/fetch": {
      "post": {
        "tags": [
          "Clinical Data Enrichments"
        ],
        "summary": "Fetch clinical data enrichments for the sample groups",
        "operationId": "fetchClinicalEnrichmentsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "groupFilter",
            "description": "List of altered and unaltered Sample/Patient IDs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalDataEnrichment"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/cna-genes/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch CNA genes by study view filter",
        "operationId": "fetchCNAGenesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CopyNumberCountByGene"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/copy-number-enrichments/fetch": {
      "post": {
        "tags": [
          "Copy Number Enrichments"
        ],
        "summary": "Fetch copy number enrichments in a molecular profile",
        "operationId": "fetchCopyNumberEnrichmentsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "copyNumberEventType",
            "in": "query",
            "description": "Type of the copy number event",
            "required": false,
            "type": "string",
            "default": "HOMDEL",
            "allowEmptyValue": false,
            "enum": [
              "HOMDEL",
              "AMP"
            ]
          },
          {
            "name": "enrichmentType",
            "in": "query",
            "description": "Type of the enrichment e.g. SAMPLE or PATIENT",
            "required": false,
            "type": "string",
            "default": "SAMPLE",
            "allowEmptyValue": false,
            "enum": [
              "SAMPLE",
              "PATIENT"
            ]
          },
          {
            "in": "body",
            "name": "groups",
            "description": "List of groups containing sample identifiers",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MolecularProfileCasesGroupFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AlterationEnrichment"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/cosmic-counts/fetch": {
      "post": {
        "tags": [
          "Cosmic Counts"
        ],
        "summary": "Get counts within the COSMIC database by keywords",
        "operationId": "fetchCosmicCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "keywords",
            "description": "List of keywords",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CosmicMutation"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/data-access-token": {
      "get": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "downloadDataAccessToken",
        "operationId": "downloadDataAccessTokenUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      },
      "head": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "downloadDataAccessToken",
        "operationId": "downloadDataAccessTokenUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "downloadDataAccessToken",
        "operationId": "downloadDataAccessTokenUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "downloadDataAccessToken",
        "operationId": "downloadDataAccessTokenUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "downloadDataAccessToken",
        "operationId": "downloadDataAccessTokenUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      },
      "options": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "downloadDataAccessToken",
        "operationId": "downloadDataAccessTokenUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "downloadDataAccessToken",
        "operationId": "downloadDataAccessTokenUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/data-access-tokens": {
      "get": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "getAllDataAccessTokens",
        "operationId": "getAllDataAccessTokensUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataAccessToken"
              }
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "createDataAccessToken",
        "operationId": "createDataAccessTokenUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "myAllowRevocationOfOtherTokens",
            "in": "query",
            "description": "myAllowRevocationOfOtherTokens",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataAccessToken"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "revokeAllDataAccessTokens",
        "operationId": "revokeAllDataAccessTokensUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/data-access-tokens/{token}": {
      "get": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "getDataAccessToken",
        "operationId": "getDataAccessTokenUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataAccessToken"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "revokeDataAccessToken",
        "operationId": "revokeDataAccessTokenUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    },
    "/expression-enrichments/fetch": {
      "post": {
        "tags": [
          "Expression Enrichments"
        ],
        "summary": "Fetch expression enrichments in a molecular profile",
        "operationId": "fetchExpressionEnrichmentsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "enrichmentType",
            "in": "query",
            "description": "Type of the enrichment e.g. SAMPLE or PATIENT",
            "required": false,
            "type": "string",
            "default": "SAMPLE",
            "allowEmptyValue": false,
            "enum": [
              "SAMPLE",
              "PATIENT"
            ]
          },
          {
            "in": "body",
            "name": "groups",
            "description": "List of groups containing sample and molecular profile identifiers",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MolecularProfileCasesGroupFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExpressionEnrichment"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/filtered-samples/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch sample IDs by study view filter",
        "operationId": "fetchFilteredSamplesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "negateFilters",
            "in": "query",
            "description": "Whether to negate the study view filters",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": false
          },
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sample"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/fusion-genes/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch fusion genes by study view filter",
        "operationId": "fetchFusionGenesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MutationCountByGene"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/geneset-hierarchy/fetch": {
      "post": {
        "tags": [
          "Gene Set Hierarchy"
        ],
        "summary": "Get gene set hierarchical organization information. I.e. how different gene sets relate to other gene sets, in a hierarchy",
        "operationId": "fetchGenesetHierarchyInfoUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "geneticProfileId",
            "in": "query",
            "description": "Genetic Profile ID e.g. gbm_tcga_gsva_scores. The final hierarchy  will only include gene sets scored in the specified profile.",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "percentile",
            "in": "query",
            "description": "Percentile (for score calculation). Which percentile to use when determining the *representative score*",
            "required": false,
            "type": "integer",
            "default": 75,
            "maximum": 100,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pvalueThreshold",
            "in": "query",
            "description": "p-value threshold. Filters out gene sets for which the score p-value is higher than this threshold.",
            "required": false,
            "type": "number",
            "default": 0.05,
            "maximum": 1,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "double",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "sampleIds",
            "description": "Fill this one if you want to specify a subset of samples: sampleIds: custom list of samples or patients to query, e.g. [\"TCGA-A1-A0SD-01\", \"TCGA-A1-A0SE-01\"]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sampleListId",
            "in": "query",
            "description": "Identifier of pre-defined sample list with samples to query, e.g. brca_tcga_all",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "scoreThreshold",
            "in": "query",
            "description": "Gene set score threshold (for absolute score value). Filters out gene sets where the GSVA(like) *representative score* is under this threshold.",
            "required": false,
            "type": "number",
            "default": 0.4,
            "maximum": 1,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "double",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenesetHierarchyInfo"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/genesets": {
      "get": {
        "tags": [
          "Gene Sets"
        ],
        "summary": "Get all gene sets",
        "operationId": "getAllGenesetsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 2147483647,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Geneset"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/genesets/fetch": {
      "post": {
        "tags": [
          "Gene Sets"
        ],
        "summary": "Fetch gene sets by ID",
        "operationId": "fetchGenesetsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "genesetIds",
            "description": "List of Gene set IDs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Geneset"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/genesets/version": {
      "get": {
        "tags": [
          "Gene Sets"
        ],
        "summary": "Get the geneset version",
        "operationId": "getGenesetVersionUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/genesets/{genesetId}": {
      "get": {
        "tags": [
          "Gene Sets"
        ],
        "summary": "Get a gene set",
        "operationId": "getGenesetUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "genesetId",
            "in": "path",
            "description": "Gene set ID e.g. GNF2_ZAP70",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Geneset"
            }
          }
        },
        "deprecated": false
      }
    },
    "/genesets/{genesetId}/expression-correlation/fetch": {
      "post": {
        "tags": [
          "Gene Set Correlation"
        ],
        "summary": "Get the genes in a gene set that have expression correlated to the gene set scores (calculated using Spearman's correlation)",
        "operationId": "fetchCorrelatedGenesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "correlationThreshold",
            "in": "query",
            "description": "Correlation threshold (for absolute correlation value, Spearman correlation)",
            "required": false,
            "type": "number",
            "default": 0.3,
            "maximum": 1,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "double",
            "allowEmptyValue": false
          },
          {
            "name": "genesetId",
            "in": "path",
            "description": "Gene set ID, e.g. HINATA_NFKB_MATRIX.",
            "required": true,
            "type": "string"
          },
          {
            "name": "geneticProfileId",
            "in": "query",
            "description": "Genetic Profile ID e.g. gbm_tcga_gsva_scores",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "sampleIds",
            "description": "Fill this one if you want to specify a subset of samples: sampleIds: custom list of samples or patients to query, e.g. [\"TCGA-A1-A0SD-01\", \"TCGA-A1-A0SE-01\"]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sampleListId",
            "in": "query",
            "description": "Identifier of pre-defined sample list with samples to query, e.g. brca_tcga_all",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenesetCorrelation"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/genetic-profiles/{geneticProfileId}/geneset-genetic-data/fetch": {
      "post": {
        "tags": [
          "Gene Set Scores"
        ],
        "summary": "Fetch gene set \"genetic data\" items (gene set scores) by profile Id, gene set ids and sample ids",
        "operationId": "fetchGeneticDataItemsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "genesetDataFilterCriteria",
            "description": "Search criteria to return the values for a given set of samples and gene set items. genesetIds: The list of identifiers for the gene sets of interest, e.g. HINATA_NFKB_MATRIX. Use one of these if you want to specify a subset of samples:(1) sampleListId: Identifier of pre-defined sample list with samples to query, e.g. brca_tcga_all or (2) sampleIds: custom list of samples or patients to query, e.g. TCGA-BH-A1EO-01, TCGA-AR-A1AR-01",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenesetDataFilterCriteria"
            }
          },
          {
            "name": "geneticProfileId",
            "in": "path",
            "description": "Genetic profile ID, e.g. gbm_tcga_gsva_scores",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenesetMolecularData"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/genomic-data-bin-counts/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch genomic data bin counts by study view filter",
        "operationId": "fetchGenomicDataBinCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataBinMethod",
            "in": "query",
            "description": "Method for data binning",
            "required": false,
            "type": "string",
            "default": "DYNAMIC",
            "allowEmptyValue": false,
            "enum": [
              "STATIC",
              "DYNAMIC"
            ]
          },
          {
            "in": "body",
            "name": "genomicDataBinCountFilter",
            "description": "Genomic data bin count filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenomicDataBinCountFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenomicDataBin"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Server running status"
        ],
        "summary": "Get the running status of the server",
        "operationId": "getServerStatusUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerStatusMessage"
            }
          }
        },
        "deprecated": false
      }
    },
    "/info": {
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "Get information about the running instance",
        "operationId": "getInfoUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Info"
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-profile-sample-counts/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch sample counts by study view filter",
        "operationId": "fetchMolecularProfileSampleCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenomicDataCount"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-profiles/co-expressions/fetch": {
      "post": {
        "tags": [
          "Co-Expressions"
        ],
        "summary": "Calculates correlations between a genetic entity from a specific profile and another profile from the same study",
        "operationId": "fetchCoExpressionsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "coExpressionFilter",
            "description": "List of Sample IDs/Sample List ID and Entrez Gene ID/Gene set ID",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CoExpressionFilter"
            }
          },
          {
            "name": "molecularProfileIdA",
            "in": "query",
            "description": "Molecular Profile ID from the Genetic Entity referenced in the co-expression filter e.g. acc_tcga_rna_seq_v2_mrna",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "molecularProfileIdB",
            "in": "query",
            "description": "Molecular Profile ID (can be the same as molecularProfileIdA) e.g. acc_tcga_rna_seq_v2_mrna",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "threshold",
            "in": "query",
            "description": "Threshold",
            "required": false,
            "type": "number",
            "default": 0.3,
            "format": "double",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CoExpression"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-profiles/{molecularProfileId}/mrna-percentile/fetch": {
      "post": {
        "tags": [
          "mRNA Percentile"
        ],
        "summary": "Get mRNA expression percentiles for list of genes for a sample",
        "operationId": "fetchMrnaPercentileUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "entrezGeneIds",
            "description": "List of Entrez Gene IDs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID e.g. acc_tcga_rna_seq_v2_mrna",
            "required": true,
            "type": "string"
          },
          {
            "name": "sampleId",
            "in": "query",
            "description": "Sample ID e.g. TCGA-OR-A5J2-01",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MrnaPercentile"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-profiles/{molecularProfileId}/mutation-spectrums/fetch": {
      "post": {
        "tags": [
          "Mutation Spectrums"
        ],
        "summary": "Fetch mutation spectrums in a molecular profile",
        "operationId": "fetchMutationSpectrumsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID e.g. acc_tcga_mutations",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "mutationSpectrumFilter",
            "description": "List of Sample IDs/Sample List ID",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MutationSpectrumFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MutationSpectrum"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/molecular-profiles/{molecularProfileId}/variant-counts/fetch": {
      "post": {
        "tags": [
          "Variant Counts"
        ],
        "summary": "Get counts of specific variants within a mutation molecular profile",
        "operationId": "fetchVariantCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID e.g. acc_tcga_mutations",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "variantCountIdentifiers",
            "description": "List of variant count identifiers",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VariantCountIdentifier"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VariantCount"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/mutated-genes/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch mutated genes by study view filter",
        "operationId": "fetchMutatedGenesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MutationCountByGene"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/mutation-enrichments/fetch": {
      "post": {
        "tags": [
          "Mutation Enrichments"
        ],
        "summary": "Fetch mutation enrichments in a molecular profile",
        "operationId": "fetchMutationEnrichmentsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "enrichmentType",
            "in": "query",
            "description": "Type of the enrichment e.g. SAMPLE or PATIENT",
            "required": false,
            "type": "string",
            "default": "SAMPLE",
            "allowEmptyValue": false,
            "enum": [
              "SAMPLE",
              "PATIENT"
            ]
          },
          {
            "in": "body",
            "name": "groups",
            "description": "List of groups containing sample identifiers",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MolecularProfileCasesGroupFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AlterationEnrichment"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/sample-lists-counts/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch case list sample counts by study view filter",
        "operationId": "fetchCaseListCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CaseListDataCount"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/significant-copy-number-regions": {
      "get": {
        "tags": [
          "Significant Copy Number Regions"
        ],
        "summary": "Get significant copy number alteration regions in a study",
        "operationId": "getSignificantCopyNumberRegionsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "chromosome",
              "cytoband",
              "widePeakStart",
              "widePeakEnd",
              "qValue",
              "amp"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Gistic"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/studies/{studyId}/significantly-mutated-genes": {
      "get": {
        "tags": [
          "Significantly Mutated Genes"
        ],
        "summary": "Get significantly mutated genes in a study",
        "operationId": "getSignificantlyMutatedGenesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "allowEmptyValue": false,
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "allowEmptyValue": false,
            "enum": [
              "ID",
              "SUMMARY",
              "DETAILED",
              "META"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "enum": [
              "entrezGeneId",
              "hugoGeneSymbol",
              "rank",
              "numberOfMutations",
              "pValue",
              "qValue"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MutSig"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/timestamps": {
      "get": {
        "tags": [
          "Timestamps"
        ],
        "summary": "Get the last time each static resource was updated",
        "operationId": "getAllTimestampsUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "AlterationEnrichment": {
      "type": "object",
      "required": [
        "counts",
        "entrezGeneId",
        "hugoGeneSymbol"
      ],
      "properties": {
        "counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountSummary"
          }
        },
        "cytoband": {
          "type": "string"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "pValue": {
          "type": "number"
        }
      },
      "title": "AlterationEnrichment"
    },
    "CaseListDataCount": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "CaseListDataCount"
    },
    "ClinicalAttribute": {
      "type": "object",
      "required": [
        "clinicalAttributeId",
        "displayName",
        "patientAttribute",
        "studyId"
      ],
      "properties": {
        "clinicalAttributeId": {
          "type": "string"
        },
        "datatype": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "patientAttribute": {
          "type": "boolean"
        },
        "priority": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        }
      },
      "title": "ClinicalAttribute"
    },
    "ClinicalDataBin": {
      "type": "object",
      "properties": {
        "attributeId": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "type": "number"
        },
        "specialValue": {
          "type": "string"
        },
        "start": {
          "type": "number"
        }
      },
      "title": "ClinicalDataBin"
    },
    "ClinicalDataBinCountFilter": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalDataBinFilter"
          }
        },
        "studyViewFilter": {
          "$ref": "#/definitions/StudyViewFilter"
        }
      },
      "title": "ClinicalDataBinCountFilter"
    },
    "ClinicalDataBinFilter": {
      "type": "object",
      "properties": {
        "attributeId": {
          "type": "string"
        },
        "customBins": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "disableLogScale": {
          "type": "boolean"
        },
        "end": {
          "type": "number"
        },
        "start": {
          "type": "number"
        }
      },
      "title": "ClinicalDataBinFilter"
    },
    "ClinicalDataCount": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "ClinicalDataCount"
    },
    "ClinicalDataCountFilter": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalDataFilter"
          }
        },
        "studyViewFilter": {
          "$ref": "#/definitions/StudyViewFilter"
        }
      },
      "title": "ClinicalDataCountFilter"
    },
    "ClinicalDataCountItem": {
      "type": "object",
      "properties": {
        "attributeId": {
          "type": "string"
        },
        "counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalDataCount"
          }
        }
      },
      "title": "ClinicalDataCountItem"
    },
    "ClinicalDataEnrichment": {
      "type": "object",
      "required": [
        "clinicalAttribute",
        "method",
        "pValue",
        "score"
      ],
      "properties": {
        "clinicalAttribute": {
          "$ref": "#/definitions/ClinicalAttribute"
        },
        "method": {
          "type": "string"
        },
        "pValue": {
          "type": "number"
        },
        "score": {
          "type": "number"
        }
      },
      "title": "ClinicalDataEnrichment"
    },
    "ClinicalDataFilter": {
      "type": "object",
      "properties": {
        "attributeId": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataFilterValue"
          }
        }
      },
      "title": "ClinicalDataFilter"
    },
    "CoExpression": {
      "type": "object",
      "required": [
        "geneticEntityId",
        "geneticEntityType",
        "pValue",
        "spearmansCorrelation"
      ],
      "properties": {
        "geneticEntityId": {
          "type": "string"
        },
        "geneticEntityType": {
          "type": "string",
          "enum": [
            "GENE",
            "GENESET",
            "PHOSPHOPROTEIN",
            "GENERIC_ASSAY"
          ]
        },
        "pValue": {
          "type": "number"
        },
        "spearmansCorrelation": {
          "type": "number"
        }
      },
      "title": "CoExpression"
    },
    "CoExpressionFilter": {
      "type": "object",
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "genesetId": {
          "type": "string"
        },
        "sampleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleListId": {
          "type": "string"
        }
      },
      "title": "CoExpressionFilter"
    },
    "CopyNumberCountByGene": {
      "type": "object",
      "properties": {
        "alteration": {
          "type": "integer",
          "format": "int32"
        },
        "cytoband": {
          "type": "string"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "matchingGenePanelIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "numberOfAlteredCases": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfProfiledCases": {
          "type": "integer",
          "format": "int32"
        },
        "qValue": {
          "type": "number"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "CopyNumberCountByGene"
    },
    "CosmicMutation": {
      "type": "object",
      "required": [
        "cosmicMutationId",
        "count",
        "proteinChange"
      ],
      "properties": {
        "cosmicMutationId": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "keyword": {
          "type": "string"
        },
        "proteinChange": {
          "type": "string"
        }
      },
      "title": "CosmicMutation"
    },
    "CountSummary": {
      "type": "object",
      "required": [
        "alteredCount",
        "name",
        "profiledCount"
      ],
      "properties": {
        "alteredCount": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "profiledCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "CountSummary"
    },
    "DataAccessToken": {
      "type": "object",
      "properties": {
        "creation": {
          "type": "string",
          "example": "yyyy-MM-dd HH:mm:ss"
        },
        "expiration": {
          "type": "string",
          "example": "yyyy-MM-dd HH:mm:ss"
        },
        "token": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "DataAccessToken"
    },
    "DataFilterValue": {
      "type": "object",
      "properties": {
        "end": {
          "type": "number"
        },
        "start": {
          "type": "number"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "DataFilterValue"
    },
    "DensityPlotBin": {
      "type": "object",
      "properties": {
        "binX": {
          "type": "number"
        },
        "binY": {
          "type": "number"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "maxX": {
          "type": "number"
        },
        "maxY": {
          "type": "number"
        },
        "minX": {
          "type": "number"
        },
        "minY": {
          "type": "number"
        }
      },
      "title": "DensityPlotBin"
    },
    "ExpressionEnrichment": {
      "type": "object",
      "required": [
        "entrezGeneId",
        "groupsStatistics",
        "hugoGeneSymbol",
        "pValue"
      ],
      "properties": {
        "cytoband": {
          "type": "string"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "groupsStatistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupStatistics"
          }
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "pValue": {
          "type": "number"
        }
      },
      "title": "ExpressionEnrichment"
    },
    "GeneFilter": {
      "type": "object",
      "properties": {
        "geneQueries": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "molecularProfileIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "GeneFilter"
    },
    "Geneset": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "genesetId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "refLink": {
          "type": "string"
        },
        "representativePvalue": {
          "type": "number",
          "format": "double"
        },
        "representativeScore": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Geneset"
    },
    "GenesetCorrelation": {
      "type": "object",
      "properties": {
        "correlationValue": {
          "type": "number",
          "format": "double"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "expressionGeneticProfileId": {
          "type": "string"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "zScoreGeneticProfileId": {
          "type": "string"
        }
      },
      "title": "GenesetCorrelation"
    },
    "GenesetDataFilterCriteria": {
      "type": "object",
      "properties": {
        "genesetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleListId": {
          "type": "string"
        }
      },
      "title": "GenesetDataFilterCriteria"
    },
    "GenesetHierarchyInfo": {
      "type": "object",
      "properties": {
        "genesets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Geneset"
          }
        },
        "nodeId": {
          "type": "integer",
          "format": "int32"
        },
        "nodeName": {
          "type": "string"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "parentNodeName": {
          "type": "string"
        }
      },
      "title": "GenesetHierarchyInfo"
    },
    "GenesetMolecularData": {
      "type": "object",
      "required": [
        "geneticProfileId",
        "patientId",
        "sampleId",
        "studyId",
        "value"
      ],
      "properties": {
        "geneset": {
          "$ref": "#/definitions/Geneset"
        },
        "genesetId": {
          "type": "string"
        },
        "geneticProfileId": {
          "type": "string"
        },
        "patientId": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        },
        "stableId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "GenesetMolecularData"
    },
    "GenomicDataBin": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "type": "number"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "profileType": {
          "type": "string"
        },
        "specialValue": {
          "type": "string"
        },
        "start": {
          "type": "number"
        }
      },
      "title": "GenomicDataBin"
    },
    "GenomicDataBinCountFilter": {
      "type": "object",
      "properties": {
        "genomicDataBinFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenomicDataBinFilter"
          }
        },
        "studyViewFilter": {
          "$ref": "#/definitions/StudyViewFilter"
        }
      },
      "title": "GenomicDataBinCountFilter"
    },
    "GenomicDataBinFilter": {
      "type": "object",
      "properties": {
        "customBins": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "disableLogScale": {
          "type": "boolean"
        },
        "end": {
          "type": "number"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "profileType": {
          "type": "string"
        },
        "start": {
          "type": "number"
        }
      },
      "title": "GenomicDataBinFilter"
    },
    "GenomicDataCount": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "GenomicDataCount"
    },
    "GenomicDataFilter": {
      "type": "object",
      "properties": {
        "hugoGeneSymbol": {
          "type": "string"
        },
        "profileType": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataFilterValue"
          }
        }
      },
      "title": "GenomicDataFilter"
    },
    "Gistic": {
      "type": "object",
      "required": [
        "amp",
        "chromosome",
        "cytoband",
        "qValue",
        "studyId",
        "widePeakEnd",
        "widePeakStart"
      ],
      "properties": {
        "amp": {
          "type": "boolean"
        },
        "chromosome": {
          "type": "integer",
          "format": "int32"
        },
        "cytoband": {
          "type": "string"
        },
        "genes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GisticToGene"
          }
        },
        "qValue": {
          "type": "number"
        },
        "studyId": {
          "type": "string"
        },
        "widePeakEnd": {
          "type": "integer",
          "format": "int32"
        },
        "widePeakStart": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Gistic"
    },
    "GisticToGene": {
      "type": "object",
      "required": [
        "entrezGeneId",
        "hugoGeneSymbol"
      ],
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "hugoGeneSymbol": {
          "type": "string"
        }
      },
      "title": "GisticToGene"
    },
    "Group": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "sampleIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleIdentifier"
          }
        }
      },
      "title": "Group"
    },
    "GroupFilter": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Group"
          }
        }
      },
      "title": "GroupFilter"
    },
    "GroupStatistics": {
      "type": "object",
      "required": [
        "meanExpression",
        "name",
        "standardDeviation"
      ],
      "properties": {
        "meanExpression": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "standardDeviation": {
          "type": "number"
        }
      },
      "title": "GroupStatistics"
    },
    "Info": {
      "type": "object",
      "required": [
        "dbVersion",
        "gitBranch",
        "gitCommitId",
        "gitCommitIdAbbrev",
        "gitCommitIdDescribe",
        "gitCommitIdDescribeShort",
        "gitCommitMessageFull",
        "gitCommitMessageShort",
        "gitCommitMessageUserEmail",
        "gitCommitMessageUserName",
        "gitDirty",
        "portalVersion"
      ],
      "properties": {
        "dbVersion": {
          "type": "string"
        },
        "gitBranch": {
          "type": "string"
        },
        "gitCommitId": {
          "type": "string"
        },
        "gitCommitIdAbbrev": {
          "type": "string"
        },
        "gitCommitIdDescribe": {
          "type": "string"
        },
        "gitCommitIdDescribeShort": {
          "type": "string"
        },
        "gitCommitMessageFull": {
          "type": "string"
        },
        "gitCommitMessageShort": {
          "type": "string"
        },
        "gitCommitMessageUserEmail": {
          "type": "string"
        },
        "gitCommitMessageUserName": {
          "type": "string"
        },
        "gitDirty": {
          "type": "boolean"
        },
        "portalVersion": {
          "type": "string"
        }
      },
      "title": "Info"
    },
    "MolecularProfileCaseIdentifier": {
      "type": "object",
      "required": [
        "caseId",
        "molecularProfileId"
      ],
      "properties": {
        "caseId": {
          "type": "string"
        },
        "molecularProfileId": {
          "type": "string"
        }
      },
      "title": "MolecularProfileCaseIdentifier"
    },
    "MolecularProfileCasesGroupFilter": {
      "type": "object",
      "properties": {
        "molecularProfileCaseIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MolecularProfileCaseIdentifier"
          }
        },
        "name": {
          "type": "string"
        }
      },
      "title": "MolecularProfileCasesGroupFilter"
    },
    "MrnaPercentile": {
      "type": "object",
      "required": [
        "entrezGeneId",
        "molecularProfileId",
        "patientId",
        "percentile",
        "sampleId",
        "studyId",
        "zScore"
      ],
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "molecularProfileId": {
          "type": "string"
        },
        "patientId": {
          "type": "string"
        },
        "percentile": {
          "type": "number"
        },
        "sampleId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        },
        "zScore": {
          "type": "number"
        }
      },
      "title": "MrnaPercentile"
    },
    "MutSig": {
      "type": "object",
      "required": [
        "entrezGeneId",
        "hugoGeneSymbol",
        "numberOfMutations",
        "pValue",
        "qValue",
        "rank",
        "studyId"
      ],
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "numberOfMutations": {
          "type": "integer",
          "format": "int32"
        },
        "pValue": {
          "type": "number"
        },
        "qValue": {
          "type": "number"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "studyId": {
          "type": "string"
        }
      },
      "title": "MutSig"
    },
    "MutationCountByGene": {
      "type": "object",
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "matchingGenePanelIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "numberOfAlteredCases": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfProfiledCases": {
          "type": "integer",
          "format": "int32"
        },
        "qValue": {
          "type": "number"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "MutationCountByGene"
    },
    "MutationSpectrum": {
      "type": "object",
      "required": [
        "CtoA",
        "CtoG",
        "CtoT",
        "TtoA",
        "TtoC",
        "TtoG",
        "molecularProfileId",
        "patientId",
        "sampleId",
        "studyId"
      ],
      "properties": {
        "CtoA": {
          "type": "integer",
          "format": "int32"
        },
        "CtoG": {
          "type": "integer",
          "format": "int32"
        },
        "CtoT": {
          "type": "integer",
          "format": "int32"
        },
        "TtoA": {
          "type": "integer",
          "format": "int32"
        },
        "TtoC": {
          "type": "integer",
          "format": "int32"
        },
        "TtoG": {
          "type": "integer",
          "format": "int32"
        },
        "molecularProfileId": {
          "type": "string"
        },
        "patientId": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        }
      },
      "title": "MutationSpectrum"
    },
    "MutationSpectrumFilter": {
      "type": "object",
      "properties": {
        "sampleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleListId": {
          "type": "string"
        }
      },
      "title": "MutationSpectrumFilter"
    },
    "Sample": {
      "type": "object",
      "required": [
        "patientId",
        "sampleId",
        "studyId"
      ],
      "properties": {
        "copyNumberSegmentPresent": {
          "type": "boolean"
        },
        "patientId": {
          "type": "string"
        },
        "profiledForFusions": {
          "type": "boolean"
        },
        "sampleId": {
          "type": "string"
        },
        "sampleType": {
          "type": "string",
          "enum": [
            "Primary Solid Tumor",
            "Recurrent Solid Tumor",
            "Primary Blood Tumor",
            "Recurrent Blood Tumor",
            "Metastatic",
            "Blood Derived Normal",
            "Solid Tissues Normal"
          ]
        },
        "sequenced": {
          "type": "boolean"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        }
      },
      "title": "Sample"
    },
    "SampleIdentifier": {
      "type": "object",
      "properties": {
        "sampleId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        }
      },
      "title": "SampleIdentifier"
    },
    "ServerStatusMessage": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "title": "ServerStatusMessage"
    },
    "StudyViewFilter": {
      "type": "object",
      "properties": {
        "caseLists": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "clinicalDataFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalDataFilter"
          }
        },
        "geneFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeneFilter"
          }
        },
        "genomicDataFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenomicDataFilter"
          }
        },
        "genomicProfiles": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "sampleIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleIdentifier"
          }
        },
        "studyIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "StudyViewFilter"
    },
    "VariantCount": {
      "type": "object",
      "required": [
        "entrezGeneId",
        "molecularProfileId",
        "numberOfSamples",
        "numberOfSamplesWithKeyword",
        "numberOfSamplesWithMutationInGene"
      ],
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "keyword": {
          "type": "string"
        },
        "molecularProfileId": {
          "type": "string"
        },
        "numberOfSamples": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfSamplesWithKeyword": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfSamplesWithMutationInGene": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "VariantCount"
    },
    "VariantCountIdentifier": {
      "type": "object",
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "keyword": {
          "type": "string"
        }
      },
      "title": "VariantCountIdentifier"
    }
  }
}
