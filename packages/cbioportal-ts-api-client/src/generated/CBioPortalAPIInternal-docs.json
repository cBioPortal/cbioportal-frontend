{
  "swagger": "2.0",
  "info": {
    "description": "A web service for supplying JSON formatted data to cBioPortal clients. Please note that interal API is currently in beta and subject to change.",
    "version": "1.0 (beta). Internal API are prone to change.",
    "title": "cBioPortal web Internal API [Beta]",
    "contact": {
      "name": "cBioPortal",
      "url": "https://www.cbioportal.org",
      "email": "cbioportal@googlegroups.com"
    },
    "license": {
      "name": "License",
      "url": "https://github.com/cBioPortal/cbioportal/blob/master/LICENSE"
    }
  },
  "tags": [
    {
      "name": "Alteration Enrichments",
      "description": " "
    },
    {
      "name": "Cache",
      "description": "Cache Controller"
    },
    {
      "name": "Clinical Attributes Count",
      "description": " "
    },
    {
      "name": "Clinical Data Enrichments",
      "description": " "
    },
    {
      "name": "Clinical Events",
      "description": " "
    },
    {
      "name": "Co-Expressions",
      "description": " "
    },
    {
      "name": "Cosmic Counts",
      "description": " "
    },
    {
      "name": "Custom driver annotations",
      "description": " "
    },
    {
      "name": "Data Access Tokens",
      "description": " "
    },
    {
      "name": "Discrete Copy Number Alteration Counts",
      "description": " "
    },
    {
      "name": "Enrichments",
      "description": " "
    },
    {
      "name": "Gene Set Correlation",
      "description": " "
    },
    {
      "name": "Gene Set Hierarchy",
      "description": " "
    },
    {
      "name": "Gene Set Scores",
      "description": " "
    },
    {
      "name": "Gene Sets",
      "description": " "
    },
    {
      "name": "Mutation Spectrums",
      "description": " "
    },
    {
      "name": "Mutations Count",
      "description": " "
    },
    {
      "name": "Reference Genome Genes",
      "description": " "
    },
    {
      "name": "Resource Data",
      "description": " "
    },
    {
      "name": "Resource Definitions",
      "description": " "
    },
    {
      "name": "Significant Copy Number Regions",
      "description": " "
    },
    {
      "name": "Significantly Mutated Genes",
      "description": " "
    },
    {
      "name": "Structural Variants",
      "description": " "
    },
    {
      "name": "Study View",
      "description": " "
    },
    {
      "name": "Timestamps",
      "description": " "
    },
    {
      "name": "Variant Counts",
      "description": " "
    },
    {
      "name": "mRNA Percentile",
      "description": " "
    }
  ],
  "paths": {
    "/alteration-enrichments/fetch": {
      "post": {
        "tags": [
          "Alteration Enrichments"
        ],
        "summary": "Fetch alteration enrichments in molecular profiles",
        "operationId": "fetchAlterationEnrichmentsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "enrichmentType",
            "in": "query",
            "description": "Type of the enrichment e.g. SAMPLE or PATIENT",
            "required": false,
            "type": "string",
            "default": "SAMPLE",
            "enum": [
              "PATIENT",
              "SAMPLE"
            ]
          },
          {
            "in": "body",
            "name": "groupsAndAlterationTypes",
            "description": "List of groups containing sample identifiers and list of Alteration Types",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MolecularProfileCasesGroupAndAlterationTypeFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AlterationEnrichment"
              }
            }
          }
        }
      }
    },
    "/cache": {
      "delete": {
        "tags": [
          "Cache"
        ],
        "summary": "Clear and reinitialize caches",
        "operationId": "clearAllCachesUsingDELETE",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "springManagedCache",
            "in": "query",
            "description": "Clear Spring-managed caches",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "description": "Secret API key passed in HTTP header. The key is configured in portal.properties of the portal instance.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/cache/{studyId}": {
      "delete": {
        "tags": [
          "Cache"
        ],
        "summary": "Clear and reinitialize caches after import/removal/update of a study",
        "operationId": "clearCachesForStudyUsingDELETE",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "springManagedCache",
            "in": "query",
            "description": "Clear Spring-managed caches",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "studyId",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "description": "Secret API key passed in HTTP header. The key is configured in portal.properties of the portal instance.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/clinical-attributes/counts/fetch": {
      "post": {
        "tags": [
          "Clinical Attributes Count"
        ],
        "summary": "Get counts for clinical attributes according to their data availability for selected samples/patients",
        "operationId": "getClinicalAttributeCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clinicalAttributeCountFilter",
            "description": "List of SampleIdentifiers or Sample List ID",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClinicalAttributeCountFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalAttributeCount"
              }
            }
          }
        }
      }
    },
    "/clinical-data-bin-counts/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch clinical data bin counts by study view filter",
        "operationId": "fetchClinicalDataBinCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clinicalDataBinCountFilter",
            "description": "Clinical data bin count filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClinicalDataBinCountFilter"
            }
          },
          {
            "name": "dataBinMethod",
            "in": "query",
            "description": "Method for data binning",
            "required": false,
            "type": "string",
            "default": "DYNAMIC",
            "enum": [
              "DYNAMIC",
              "STATIC"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalDataBin"
              }
            }
          }
        }
      }
    },
    "/clinical-data-counts/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch clinical data counts by study view filter",
        "operationId": "fetchClinicalDataCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clinicalDataCountFilter",
            "description": "Clinical data count filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClinicalDataCountFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalDataCountItem"
              }
            }
          }
        }
      }
    },
    "/clinical-data-density-plot/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch clinical data density plot bins by study view filter",
        "operationId": "fetchClinicalDataDensityPlotUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          },
          {
            "name": "xAxisAttributeId",
            "in": "query",
            "description": "Clinical Attribute ID of the X axis",
            "required": true,
            "type": "string"
          },
          {
            "name": "xAxisBinCount",
            "in": "query",
            "description": "Number of the bins in X axis",
            "required": false,
            "type": "integer",
            "default": 50,
            "format": "int32"
          },
          {
            "name": "xAxisEnd",
            "in": "query",
            "description": "Starting point of the X axis, if different than largest value",
            "required": false,
            "type": "number"
          },
          {
            "name": "xAxisLogScale",
            "in": "query",
            "description": "Use log scale for X axis",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "xAxisStart",
            "in": "query",
            "description": "Starting point of the X axis, if different than smallest value",
            "required": false,
            "type": "number"
          },
          {
            "name": "yAxisAttributeId",
            "in": "query",
            "description": "Clinical Attribute ID of the Y axis",
            "required": true,
            "type": "string"
          },
          {
            "name": "yAxisBinCount",
            "in": "query",
            "description": "Number of the bins in Y axis",
            "required": false,
            "type": "integer",
            "default": 50,
            "format": "int32"
          },
          {
            "name": "yAxisEnd",
            "in": "query",
            "description": "Starting point of the Y axis, if different than largest value",
            "required": false,
            "type": "number"
          },
          {
            "name": "yAxisLogScale",
            "in": "query",
            "description": "Use log scale for Y axis",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "yAxisStart",
            "in": "query",
            "description": "Starting point of the Y axis, if different than smallest value",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DensityPlotData"
            }
          }
        }
      }
    },
    "/clinical-data-enrichments/fetch": {
      "post": {
        "tags": [
          "Clinical Data Enrichments"
        ],
        "summary": "Fetch clinical data enrichments for the sample groups",
        "operationId": "fetchClinicalEnrichmentsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "groupFilter",
            "description": "List of altered and unaltered Sample/Patient IDs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalDataEnrichment"
              }
            }
          }
        }
      }
    },
    "/clinical-data-table/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch clinical data for the Clinical Tab of Study View",
        "operationId": "fetchClinicalDataClinicalTableUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "maximum": 1000000,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "searchTerm",
            "in": "query",
            "description": "Search term to filter sample rows. Samples are returned with a partial match to the search term for any sample clinical attribute.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "enum": [
              "clinicalAttributeId",
              "value"
            ]
          },
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClinicalDataCollection"
            }
          }
        }
      }
    },
    "/clinical-data-violin-plots/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch violin plot curves per categorical clinical data value, filtered by study view filter",
        "operationId": "fetchClinicalDataViolinPlotsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "axisEnd",
            "in": "query",
            "description": "Ending point  of the violin plot axis, if different than largest value",
            "required": false,
            "type": "number"
          },
          {
            "name": "axisStart",
            "in": "query",
            "description": "Starting point of the violin plot axis, if different than smallest value",
            "required": false,
            "type": "number"
          },
          {
            "name": "categoricalAttributeId",
            "in": "query",
            "description": "Clinical Attribute ID of the categorical attribute",
            "required": true,
            "type": "string"
          },
          {
            "name": "logScale",
            "in": "query",
            "description": "Use log scale for the numerical attribute",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "numCurvePoints",
            "in": "query",
            "description": "Number of points in the curve",
            "required": false,
            "type": "number",
            "default": 100
          },
          {
            "name": "numericalAttributeId",
            "in": "query",
            "description": "Clinical Attribute ID of the numerical attribute",
            "required": true,
            "type": "string"
          },
          {
            "name": "sigmaMultiplier",
            "in": "query",
            "description": "Sigma stepsize multiplier",
            "required": false,
            "type": "number",
            "default": 1
          },
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClinicalViolinPlotData"
            }
          }
        }
      }
    },
    "/clinical-event-type-counts/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Get Counts of Clinical Event Types by Study View Filter",
        "operationId": "getClinicalEventTypeCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalEventTypeCount"
              }
            }
          }
        }
      }
    },
    "/cna-genes/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch CNA genes by study view filter",
        "operationId": "fetchCNAGenesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CopyNumberCountByGene"
              }
            }
          }
        }
      }
    },
    "/cosmic-counts/fetch": {
      "post": {
        "tags": [
          "Cosmic Counts"
        ],
        "summary": "Get counts within the COSMIC database by keywords",
        "operationId": "fetchCosmicCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "keywords",
            "description": "List of keywords",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CosmicMutation"
              }
            }
          }
        }
      }
    },
    "/custom-data-counts/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch custom data counts by study view filter",
        "operationId": "fetchCustomDataCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clinicalDataCountFilter",
            "description": "Custom data count filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClinicalDataCountFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalDataCountItem"
              }
            }
          }
        }
      }
    },
    "/custom-driver-annotation-report/fetch": {
      "post": {
        "tags": [
          "Custom driver annotations"
        ],
        "summary": "Return availability of custom driver annotations for molecular profiles",
        "operationId": "fetchAlterationDriverAnnotationReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "molecularProfileIds",
            "description": "molecularProfileIds",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomDriverAnnotationReport"
            }
          }
        }
      }
    },
    "/data-access-token": {
      "get": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "Create a new data access token",
        "operationId": "downloadDataAccessTokenUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/data-access-tokens": {
      "get": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "Retrieve all data access tokens",
        "operationId": "getAllDataAccessTokensUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataAccessToken"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "Get all data access tokens",
        "operationId": "createDataAccessTokenUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataAccessToken"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "Delete all data access tokens",
        "operationId": "revokeAllDataAccessTokensUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/data-access-tokens/{token}": {
      "get": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "Retrieve an existing data access token",
        "operationId": "getDataAccessTokenUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataAccessToken"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Data Access Tokens"
        ],
        "summary": "Delete a data access token",
        "operationId": "revokeDataAccessTokenUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/expression-enrichments/fetch": {
      "post": {
        "tags": [
          "Enrichments"
        ],
        "summary": "Fetch genomic enrichments in a molecular profile",
        "operationId": "fetchGenomicEnrichmentsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "enrichmentType",
            "in": "query",
            "description": "Type of the enrichment e.g. SAMPLE or PATIENT",
            "required": false,
            "type": "string",
            "default": "SAMPLE",
            "enum": [
              "PATIENT",
              "SAMPLE"
            ]
          },
          {
            "in": "body",
            "name": "groups",
            "description": "List of groups containing sample and molecular profile identifiers",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MolecularProfileCasesGroupFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenomicEnrichment"
              }
            }
          }
        }
      }
    },
    "/filtered-samples/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch sample IDs by study view filter",
        "operationId": "fetchFilteredSamplesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "negateFilters",
            "in": "query",
            "description": "Whether to negate the study view filters",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sample"
              }
            }
          }
        }
      }
    },
    "/generic-assay-data-bin-counts/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch generic assay data bin counts by study view filter",
        "operationId": "fetchGenericAssayDataBinCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataBinMethod",
            "in": "query",
            "description": "Method for data binning",
            "required": false,
            "type": "string",
            "default": "DYNAMIC",
            "enum": [
              "DYNAMIC",
              "STATIC"
            ]
          },
          {
            "in": "body",
            "name": "genericAssayDataBinCountFilter",
            "description": "Generic assay data bin count filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericAssayDataBinCountFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenericAssayDataBin"
              }
            }
          }
        }
      }
    },
    "/generic-assay-data-counts/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch generic assay data counts by study view filter",
        "operationId": "fetchGenericAssayDataCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "genericAssayDataCountFilter",
            "description": "Generic assay data count filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericAssayDataCountFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenericAssayDataCountItem"
              }
            }
          }
        }
      }
    },
    "/generic-assay-enrichments/fetch": {
      "post": {
        "tags": [
          "Enrichments"
        ],
        "summary": "Fetch generic assay enrichments in a molecular profile",
        "operationId": "fetchGenericAssayEnrichmentsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "enrichmentType",
            "in": "query",
            "description": "Type of the enrichment e.g. SAMPLE or PATIENT",
            "required": false,
            "type": "string",
            "default": "SAMPLE",
            "enum": [
              "PATIENT",
              "SAMPLE"
            ]
          },
          {
            "in": "body",
            "name": "groups",
            "description": "List of groups containing sample and molecular profile identifiers",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MolecularProfileCasesGroupFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenericAssayEnrichment"
              }
            }
          }
        }
      }
    },
    "/geneset-hierarchy/fetch": {
      "post": {
        "tags": [
          "Gene Set Hierarchy"
        ],
        "summary": "Get gene set hierarchical organization information. I.e. how different gene sets relate to other gene sets, in a hierarchy",
        "operationId": "fetchGenesetHierarchyInfoUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "geneticProfileId",
            "in": "query",
            "description": "Genetic Profile ID e.g. gbm_tcga_gsva_scores. The final hierarchy  will only include gene sets scored in the specified profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "percentile",
            "in": "query",
            "description": "Percentile (for score calculation). Which percentile to use when determining the *representative score*",
            "required": false,
            "type": "integer",
            "default": 75,
            "maximum": 100,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "pvalueThreshold",
            "in": "query",
            "description": "p-value threshold. Filters out gene sets for which the score p-value is higher than this threshold.",
            "required": false,
            "type": "number",
            "default": 0.05,
            "maximum": 1,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "double"
          },
          {
            "in": "body",
            "name": "sampleIds",
            "description": "Fill this one if you want to specify a subset of samples: sampleIds: custom list of samples or patients to query, e.g. [\"TCGA-A1-A0SD-01\", \"TCGA-A1-A0SE-01\"]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sampleListId",
            "in": "query",
            "description": "Identifier of pre-defined sample list with samples to query, e.g. brca_tcga_all",
            "required": false,
            "type": "string"
          },
          {
            "name": "scoreThreshold",
            "in": "query",
            "description": "Gene set score threshold (for absolute score value). Filters out gene sets where the GSVA(like) *representative score* is under this threshold.",
            "required": false,
            "type": "number",
            "default": 0.4,
            "maximum": 1,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenesetHierarchyInfo"
              }
            }
          }
        }
      }
    },
    "/genesets": {
      "get": {
        "tags": [
          "Gene Sets"
        ],
        "summary": "Get all gene sets",
        "operationId": "getAllGenesetsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 2147483647,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "enum": [
              "DETAILED",
              "ID",
              "META",
              "SUMMARY"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Geneset"
              }
            }
          }
        }
      }
    },
    "/genesets/fetch": {
      "post": {
        "tags": [
          "Gene Sets"
        ],
        "summary": "Fetch gene sets by ID",
        "operationId": "fetchGenesetsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "genesetIds",
            "description": "List of Gene set IDs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Geneset"
              }
            }
          }
        }
      }
    },
    "/genesets/version": {
      "get": {
        "tags": [
          "Gene Sets"
        ],
        "summary": "Get the geneset version",
        "operationId": "getGenesetVersionUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/genesets/{genesetId}": {
      "get": {
        "tags": [
          "Gene Sets"
        ],
        "summary": "Get a gene set",
        "operationId": "getGenesetUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "genesetId",
            "in": "path",
            "description": "Gene set ID e.g. GNF2_ZAP70",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Geneset"
            }
          }
        }
      }
    },
    "/genesets/{genesetId}/expression-correlation/fetch": {
      "post": {
        "tags": [
          "Gene Set Correlation"
        ],
        "summary": "Get the genes in a gene set that have expression correlated to the gene set scores (calculated using Spearman's correlation)",
        "operationId": "fetchCorrelatedGenesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "correlationThreshold",
            "in": "query",
            "description": "Correlation threshold (for absolute correlation value, Spearman correlation)",
            "required": false,
            "type": "number",
            "default": 0.3,
            "maximum": 1,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "double"
          },
          {
            "name": "genesetId",
            "in": "path",
            "description": "Gene set ID, e.g. HINATA_NFKB_MATRIX.",
            "required": true,
            "type": "string"
          },
          {
            "name": "geneticProfileId",
            "in": "query",
            "description": "Genetic Profile ID e.g. gbm_tcga_gsva_scores",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "sampleIds",
            "description": "Fill this one if you want to specify a subset of samples: sampleIds: custom list of samples or patients to query, e.g. [\"TCGA-A1-A0SD-01\", \"TCGA-A1-A0SE-01\"]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sampleListId",
            "in": "query",
            "description": "Identifier of pre-defined sample list with samples to query, e.g. brca_tcga_all",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenesetCorrelation"
              }
            }
          }
        }
      }
    },
    "/genetic-profiles/{geneticProfileId}/geneset-genetic-data/fetch": {
      "post": {
        "tags": [
          "Gene Set Scores"
        ],
        "summary": "Fetch gene set \"genetic data\" items (gene set scores) by profile Id, gene set ids and sample ids",
        "operationId": "fetchGeneticDataItemsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "genesetDataFilterCriteria",
            "description": "Search criteria to return the values for a given set of samples and gene set items. genesetIds: The list of identifiers for the gene sets of interest, e.g. HINATA_NFKB_MATRIX. Use one of these if you want to specify a subset of samples:(1) sampleListId: Identifier of pre-defined sample list with samples to query, e.g. brca_tcga_all or (2) sampleIds: custom list of samples or patients to query, e.g. TCGA-BH-A1EO-01, TCGA-AR-A1AR-01",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenesetDataFilterCriteria"
            }
          },
          {
            "name": "geneticProfileId",
            "in": "path",
            "description": "Genetic profile ID, e.g. gbm_tcga_gsva_scores",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenesetMolecularData"
              }
            }
          }
        }
      }
    },
    "/genomic-data-bin-counts/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch genomic data bin counts by study view filter",
        "operationId": "fetchGenomicDataBinCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dataBinMethod",
            "in": "query",
            "description": "Method for data binning",
            "required": false,
            "type": "string",
            "default": "DYNAMIC",
            "enum": [
              "DYNAMIC",
              "STATIC"
            ]
          },
          {
            "in": "body",
            "name": "genomicDataBinCountFilter",
            "description": "Genomic data bin count filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenomicDataBinCountFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenomicDataBin"
              }
            }
          }
        }
      }
    },
    "/molecular-profile-sample-counts/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch sample counts by study view filter",
        "operationId": "fetchMolecularProfileSampleCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenomicDataCount"
              }
            }
          }
        }
      }
    },
    "/molecular-profiles/co-expressions/fetch": {
      "post": {
        "tags": [
          "Co-Expressions"
        ],
        "summary": "Calculates correlations between a genetic entity from a specific profile and another profile from the same study",
        "operationId": "fetchCoExpressionsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "coExpressionFilter",
            "description": "List of Sample IDs/Sample List ID and Entrez Gene ID/Gene set ID",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CoExpressionFilter"
            }
          },
          {
            "name": "molecularProfileIdA",
            "in": "query",
            "description": "Molecular Profile ID from the Genetic Entity referenced in the co-expression filter e.g. acc_tcga_rna_seq_v2_mrna",
            "required": true,
            "type": "string"
          },
          {
            "name": "molecularProfileIdB",
            "in": "query",
            "description": "Molecular Profile ID (can be the same as molecularProfileIdA) e.g. acc_tcga_rna_seq_v2_mrna",
            "required": true,
            "type": "string"
          },
          {
            "name": "threshold",
            "in": "query",
            "description": "Threshold",
            "required": false,
            "type": "number",
            "default": 0.3,
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CoExpression"
              }
            }
          }
        }
      }
    },
    "/molecular-profiles/{molecularProfileId}/discrete-copy-number-counts/fetch": {
      "post": {
        "tags": [
          "Discrete Copy Number Alteration Counts"
        ],
        "summary": "Get counts of specific genes and alterations within a CNA molecular profile",
        "operationId": "fetchCopyNumberCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "copyNumberCountIdentifiers",
            "description": "List of copy number count identifiers",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CopyNumberCountIdentifier"
              }
            }
          },
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID e.g. acc_tcga_gistic",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CopyNumberCount"
              }
            }
          }
        }
      }
    },
    "/molecular-profiles/{molecularProfileId}/mrna-percentile/fetch": {
      "post": {
        "tags": [
          "mRNA Percentile"
        ],
        "summary": "Get mRNA expression percentiles for list of genes for a sample",
        "operationId": "fetchMrnaPercentileUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "entrezGeneIds",
            "description": "List of Entrez Gene IDs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID e.g. acc_tcga_rna_seq_v2_mrna",
            "required": true,
            "type": "string"
          },
          {
            "name": "sampleId",
            "in": "query",
            "description": "Sample ID e.g. TCGA-OR-A5J2-01",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MrnaPercentile"
              }
            }
          }
        }
      }
    },
    "/molecular-profiles/{molecularProfileId}/mutation-spectrums/fetch": {
      "post": {
        "tags": [
          "Mutation Spectrums"
        ],
        "summary": "Fetch mutation spectrums in a molecular profile",
        "operationId": "fetchMutationSpectrumsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID e.g. acc_tcga_mutations",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "mutationSpectrumFilter",
            "description": "List of Sample IDs/Sample List ID",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MutationSpectrumFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MutationSpectrum"
              }
            }
          }
        }
      }
    },
    "/molecular-profiles/{molecularProfileId}/variant-counts/fetch": {
      "post": {
        "tags": [
          "Variant Counts"
        ],
        "summary": "Get counts of specific variants within a mutation molecular profile",
        "operationId": "fetchVariantCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "molecularProfileId",
            "in": "path",
            "description": "Molecular Profile ID e.g. acc_tcga_mutations",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "variantCountIdentifiers",
            "description": "List of variant count identifiers",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VariantCountIdentifier"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VariantCount"
              }
            }
          }
        }
      }
    },
    "/mutated-genes/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch mutated genes by study view filter",
        "operationId": "fetchMutatedGenesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AlterationCountByGene"
              }
            }
          }
        }
      }
    },
    "/mutation-counts-by-position/fetch": {
      "post": {
        "tags": [
          "Mutations Count"
        ],
        "summary": "Fetch mutation counts in all studies by gene and position",
        "operationId": "fetchMutationCountsByPositionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "mutationPositionIdentifiers",
            "description": "List of gene and positions",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MutationPositionIdentifier"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MutationCountByPosition"
              }
            }
          }
        }
      }
    },
    "/reference-genome-genes/{genomeName}": {
      "get": {
        "tags": [
          "Reference Genome Genes"
        ],
        "summary": "Get all reference genes",
        "operationId": "getAllReferenceGenomeGenesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "genomeName",
            "in": "path",
            "description": "Name of Reference Genome hg19",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReferenceGenomeGene"
              }
            }
          }
        }
      }
    },
    "/reference-genome-genes/{genomeName}/fetch": {
      "post": {
        "tags": [
          "Reference Genome Genes"
        ],
        "summary": "Fetch genes of reference genome of interest",
        "operationId": "fetchReferenceGenomeGenesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "geneIds",
            "description": "List of Entrez Gene IDs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "genomeName",
            "in": "path",
            "description": "Name of Reference Genome hg19",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReferenceGenomeGene"
              }
            }
          }
        }
      }
    },
    "/reference-genome-genes/{genomeName}/{geneId}": {
      "get": {
        "tags": [
          "Reference Genome Genes"
        ],
        "summary": "Get a gene of a reference genome of interest",
        "operationId": "getReferenceGenomeGeneUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "geneId",
            "in": "path",
            "description": "Entrez Gene ID 207",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "genomeName",
            "in": "path",
            "description": "Name of Reference Genome hg19",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReferenceGenomeGene"
            }
          }
        }
      }
    },
    "/resource-definitions/fetch": {
      "post": {
        "tags": [
          "Resource Definitions"
        ],
        "summary": "Get all resource definitions for specified studies",
        "operationId": "fetchResourceDefinitionsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "enum": [
              "DETAILED",
              "ID",
              "META",
              "SUMMARY"
            ]
          },
          {
            "in": "body",
            "name": "studyIds",
            "description": "List of Study IDs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceDefinition"
              }
            }
          }
        }
      }
    },
    "/sample-lists-counts/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch case list sample counts by study view filter",
        "operationId": "fetchCaseListCountsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CaseListDataCount"
              }
            }
          }
        }
      }
    },
    "/structural-variant/fetch": {
      "post": {
        "tags": [
          "Structural Variants"
        ],
        "summary": "Fetch structural variants for entrezGeneIds and molecularProfileIds or sampleMolecularIdentifiers",
        "operationId": "fetchStructuralVariantsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "structuralVariantFilter",
            "description": "List of entrezGeneIds, structural variant queries and molecularProfileIds or sampleMolecularIdentifiers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StructuralVariantFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StructuralVariant"
              }
            }
          }
        }
      }
    },
    "/structuralvariant-genes/fetch": {
      "post": {
        "tags": [
          "Study View"
        ],
        "summary": "Fetch structural variant genes by study view filter",
        "operationId": "fetchStructuralVariantGenesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "studyViewFilter",
            "description": "Study view filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StudyViewFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AlterationCountByGene"
              }
            }
          }
        }
      }
    },
    "/studies/{studyId}/clinical-events": {
      "get": {
        "tags": [
          "Clinical Events"
        ],
        "summary": "Get all clinical events in a study",
        "operationId": "getAllClinicalEventsInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "enum": [
              "DETAILED",
              "ID",
              "META",
              "SUMMARY"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "enum": [
              "endNumberOfDaysSinceDiagnosis",
              "eventType",
              "startNumberOfDaysSinceDiagnosis"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. lgg_ucsf_2014",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalEvent"
              }
            }
          }
        }
      }
    },
    "/studies/{studyId}/patients/{patientId}/clinical-events": {
      "get": {
        "tags": [
          "Clinical Events"
        ],
        "summary": "Get all clinical events of a patient in a study",
        "operationId": "getAllClinicalEventsOfPatientInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "patientId",
            "in": "path",
            "description": "Patient ID e.g. P01",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "enum": [
              "DETAILED",
              "ID",
              "META",
              "SUMMARY"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "enum": [
              "endNumberOfDaysSinceDiagnosis",
              "eventType",
              "startNumberOfDaysSinceDiagnosis"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. lgg_ucsf_2014",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClinicalEvent"
              }
            }
          }
        }
      }
    },
    "/studies/{studyId}/patients/{patientId}/resource-data": {
      "get": {
        "tags": [
          "Resource Data"
        ],
        "summary": "Get all resource data of a patient in a study",
        "operationId": "getAllResourceDataOfPatientInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "patientId",
            "in": "path",
            "description": "Patient ID e.g. TCGA-OR-A5J2",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "enum": [
              "DETAILED",
              "ID",
              "META",
              "SUMMARY"
            ]
          },
          {
            "name": "resourceId",
            "in": "query",
            "description": "Resource ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "enum": [
              "ResourceId",
              "url"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceData"
              }
            }
          }
        }
      }
    },
    "/studies/{studyId}/resource-data": {
      "get": {
        "tags": [
          "Resource Data"
        ],
        "summary": "Get all resource data for a study",
        "operationId": "getAllStudyResourceDataInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "enum": [
              "DETAILED",
              "ID",
              "META",
              "SUMMARY"
            ]
          },
          {
            "name": "resourceId",
            "in": "query",
            "description": "Resource ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "enum": [
              "ResourceId",
              "url"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceData"
              }
            }
          }
        }
      }
    },
    "/studies/{studyId}/resource-definitions": {
      "get": {
        "tags": [
          "Resource Definitions"
        ],
        "summary": "Get all resource definitions in the specified study",
        "operationId": "getAllResourceDefinitionsInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "enum": [
              "DETAILED",
              "ID",
              "META",
              "SUMMARY"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "enum": [
              "description",
              "displayName",
              "openByDefault",
              "priority",
              "resourceId",
              "resourceType",
              "studyId"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceDefinition"
              }
            }
          }
        }
      }
    },
    "/studies/{studyId}/resource-definitions/{resourceId}": {
      "get": {
        "tags": [
          "Resource Definitions"
        ],
        "summary": "Get specified resource definition",
        "operationId": "getResourceDefinitionInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "description": "Resource ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceDefinition"
            }
          }
        }
      }
    },
    "/studies/{studyId}/samples/{sampleId}/resource-data": {
      "get": {
        "tags": [
          "Resource Data"
        ],
        "summary": "Get all resource data of a sample in a study",
        "operationId": "getAllResourceDataOfSampleInStudyUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "enum": [
              "DETAILED",
              "ID",
              "META",
              "SUMMARY"
            ]
          },
          {
            "name": "resourceId",
            "in": "query",
            "description": "Resource ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "sampleId",
            "in": "path",
            "description": "Sample ID e.g. TCGA-OR-A5J2-01",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "enum": [
              "ResourceId",
              "url"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceData"
              }
            }
          }
        }
      }
    },
    "/studies/{studyId}/significant-copy-number-regions": {
      "get": {
        "tags": [
          "Significant Copy Number Regions"
        ],
        "summary": "Get significant copy number alteration regions in a study",
        "operationId": "getSignificantCopyNumberRegionsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "enum": [
              "DETAILED",
              "ID",
              "META",
              "SUMMARY"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "enum": [
              "amp",
              "chromosome",
              "cytoband",
              "qValue",
              "widePeakEnd",
              "widePeakStart"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Gistic"
              }
            }
          }
        }
      }
    },
    "/studies/{studyId}/significantly-mutated-genes": {
      "get": {
        "tags": [
          "Significantly Mutated Genes"
        ],
        "summary": "Get significantly mutated genes in a study",
        "operationId": "getSignificantlyMutatedGenesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the sort",
            "required": false,
            "type": "string",
            "default": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number of the result list",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size of the result list",
            "required": false,
            "type": "integer",
            "default": 10000000,
            "maximum": 10000000,
            "exclusiveMaximum": false,
            "minimum": 1,
            "exclusiveMinimum": false,
            "format": "int32"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Level of detail of the response",
            "required": false,
            "type": "string",
            "default": "SUMMARY",
            "enum": [
              "DETAILED",
              "ID",
              "META",
              "SUMMARY"
            ]
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Name of the property that the result list is sorted by",
            "required": false,
            "type": "string",
            "enum": [
              "entrezGeneId",
              "hugoGeneSymbol",
              "numberOfMutations",
              "pValue",
              "qValue",
              "rank"
            ]
          },
          {
            "name": "studyId",
            "in": "path",
            "description": "Study ID e.g. acc_tcga",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MutSig"
              }
            }
          }
        }
      }
    },
    "/timestamps": {
      "get": {
        "tags": [
          "Timestamps"
        ],
        "summary": "Get the last time each static resource was updated",
        "operationId": "getAllTimestampsUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AlterationCountByGene": {
      "type": "object",
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "matchingGenePanelIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "numberOfAlteredCases": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfProfiledCases": {
          "type": "integer",
          "format": "int32"
        },
        "qValue": {
          "type": "number"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AlterationCountByGene"
    },
    "AlterationEnrichment": {
      "type": "object",
      "required": [
        "counts",
        "entrezGeneId",
        "hugoGeneSymbol"
      ],
      "properties": {
        "counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountSummary"
          }
        },
        "cytoband": {
          "type": "string"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "pValue": {
          "type": "number"
        }
      },
      "title": "AlterationEnrichment"
    },
    "AlterationFilter": {
      "type": "object",
      "properties": {
        "copyNumberAlterationEventTypes": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "includeDriver": {
          "type": "boolean"
        },
        "includeGermline": {
          "type": "boolean"
        },
        "includeSomatic": {
          "type": "boolean"
        },
        "includeUnknownOncogenicity": {
          "type": "boolean"
        },
        "includeUnknownStatus": {
          "type": "boolean"
        },
        "includeUnknownTier": {
          "type": "boolean"
        },
        "includeVUS": {
          "type": "boolean"
        },
        "mutationEventTypes": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "structuralVariants": {
          "type": "boolean"
        },
        "tiersBooleanMap": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "title": "AlterationFilter"
    },
    "AndedPatientTreatmentFilters": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OredPatientTreatmentFilters"
          }
        }
      },
      "title": "AndedPatientTreatmentFilters"
    },
    "AndedSampleTreatmentFilters": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OredSampleTreatmentFilters"
          }
        }
      },
      "title": "AndedSampleTreatmentFilters"
    },
    "BinsGeneratorConfig": {
      "type": "object",
      "properties": {
        "anchorValue": {
          "type": "number"
        },
        "binSize": {
          "type": "number"
        }
      },
      "title": "BinsGeneratorConfig"
    },
    "CaseListDataCount": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "CaseListDataCount"
    },
    "ClinicalAttribute": {
      "type": "object",
      "required": [
        "clinicalAttributeId",
        "displayName",
        "patientAttribute",
        "studyId"
      ],
      "properties": {
        "clinicalAttributeId": {
          "type": "string"
        },
        "datatype": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "patientAttribute": {
          "type": "boolean"
        },
        "priority": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        }
      },
      "title": "ClinicalAttribute"
    },
    "ClinicalAttributeCount": {
      "type": "object",
      "properties": {
        "clinicalAttributeId": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ClinicalAttributeCount"
    },
    "ClinicalAttributeCountFilter": {
      "type": "object",
      "properties": {
        "sampleIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleIdentifier"
          }
        },
        "sampleListId": {
          "type": "string"
        }
      },
      "title": "ClinicalAttributeCountFilter"
    },
    "ClinicalData": {
      "type": "object",
      "required": [
        "clinicalAttributeId",
        "patientId",
        "studyId"
      ],
      "properties": {
        "clinicalAttribute": {
          "$ref": "#/definitions/ClinicalAttribute"
        },
        "clinicalAttributeId": {
          "type": "string"
        },
        "patientId": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "ClinicalData"
    },
    "ClinicalDataBin": {
      "type": "object",
      "properties": {
        "attributeId": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "type": "number"
        },
        "specialValue": {
          "type": "string"
        },
        "start": {
          "type": "number"
        }
      },
      "title": "ClinicalDataBin"
    },
    "ClinicalDataBinCountFilter": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalDataBinFilter"
          }
        },
        "studyViewFilter": {
          "$ref": "#/definitions/StudyViewFilter"
        }
      },
      "title": "ClinicalDataBinCountFilter"
    },
    "ClinicalDataBinFilter": {
      "type": "object",
      "properties": {
        "attributeId": {
          "type": "string"
        },
        "binMethod": {
          "type": "string",
          "enum": [
            "CUSTOM",
            "GENERATE",
            "MEDIAN",
            "QUARTILE"
          ]
        },
        "binsGeneratorConfig": {
          "$ref": "#/definitions/BinsGeneratorConfig"
        },
        "customBins": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "disableLogScale": {
          "type": "boolean"
        },
        "end": {
          "type": "number"
        },
        "start": {
          "type": "number"
        }
      },
      "title": "ClinicalDataBinFilter"
    },
    "ClinicalDataCollection": {
      "type": "object",
      "properties": {
        "patientClinicalData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalData"
          }
        },
        "sampleClinicalData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalData"
          }
        }
      },
      "title": "ClinicalDataCollection"
    },
    "ClinicalDataCount": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "ClinicalDataCount"
    },
    "ClinicalDataCountFilter": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalDataFilter"
          }
        },
        "studyViewFilter": {
          "$ref": "#/definitions/StudyViewFilter"
        }
      },
      "title": "ClinicalDataCountFilter"
    },
    "ClinicalDataCountItem": {
      "type": "object",
      "properties": {
        "attributeId": {
          "type": "string"
        },
        "counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalDataCount"
          }
        }
      },
      "title": "ClinicalDataCountItem"
    },
    "ClinicalDataEnrichment": {
      "type": "object",
      "required": [
        "clinicalAttribute",
        "method",
        "pValue",
        "score"
      ],
      "properties": {
        "clinicalAttribute": {
          "$ref": "#/definitions/ClinicalAttribute"
        },
        "method": {
          "type": "string"
        },
        "pValue": {
          "type": "number"
        },
        "score": {
          "type": "number"
        }
      },
      "title": "ClinicalDataEnrichment"
    },
    "ClinicalDataFilter": {
      "type": "object",
      "properties": {
        "attributeId": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataFilterValue"
          }
        }
      },
      "title": "ClinicalDataFilter"
    },
    "ClinicalEvent": {
      "type": "object",
      "required": [
        "eventType",
        "patientId",
        "studyId"
      ],
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalEventData"
          }
        },
        "endNumberOfDaysSinceDiagnosis": {
          "type": "integer",
          "format": "int32"
        },
        "eventType": {
          "type": "string"
        },
        "patientId": {
          "type": "string"
        },
        "startNumberOfDaysSinceDiagnosis": {
          "type": "integer",
          "format": "int32"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        }
      },
      "title": "ClinicalEvent"
    },
    "ClinicalEventData": {
      "type": "object",
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "ClinicalEventData"
    },
    "ClinicalEventTypeCount": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "eventType": {
          "type": "string"
        }
      },
      "title": "ClinicalEventTypeCount"
    },
    "ClinicalViolinPlotBoxData": {
      "type": "object",
      "properties": {
        "median": {
          "type": "number",
          "format": "double"
        },
        "q1": {
          "type": "number",
          "format": "double"
        },
        "q3": {
          "type": "number",
          "format": "double"
        },
        "whiskerLower": {
          "type": "number",
          "format": "double"
        },
        "whiskerUpper": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "ClinicalViolinPlotBoxData"
    },
    "ClinicalViolinPlotData": {
      "type": "object",
      "properties": {
        "axisEnd": {
          "type": "number",
          "format": "double"
        },
        "axisStart": {
          "type": "number",
          "format": "double"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalViolinPlotRowData"
          }
        }
      },
      "title": "ClinicalViolinPlotData"
    },
    "ClinicalViolinPlotIndividualPoint": {
      "type": "object",
      "properties": {
        "sampleId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "ClinicalViolinPlotIndividualPoint"
    },
    "ClinicalViolinPlotRowData": {
      "type": "object",
      "properties": {
        "boxData": {
          "$ref": "#/definitions/ClinicalViolinPlotBoxData"
        },
        "category": {
          "type": "string"
        },
        "curveData": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "individualPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalViolinPlotIndividualPoint"
          }
        },
        "numSamples": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ClinicalViolinPlotRowData"
    },
    "CoExpression": {
      "type": "object",
      "required": [
        "geneticEntityId",
        "geneticEntityType",
        "pValue",
        "spearmansCorrelation"
      ],
      "properties": {
        "geneticEntityId": {
          "type": "string"
        },
        "geneticEntityType": {
          "type": "string",
          "enum": [
            "GENE",
            "GENERIC_ASSAY",
            "GENESET",
            "PHOSPHOPROTEIN"
          ]
        },
        "pValue": {
          "type": "number"
        },
        "spearmansCorrelation": {
          "type": "number"
        }
      },
      "title": "CoExpression"
    },
    "CoExpressionFilter": {
      "type": "object",
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "genesetId": {
          "type": "string"
        },
        "sampleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleListId": {
          "type": "string"
        }
      },
      "title": "CoExpressionFilter"
    },
    "CopyNumberCount": {
      "type": "object",
      "required": [
        "alteration",
        "entrezGeneId",
        "molecularProfileId",
        "numberOfSamples",
        "numberOfSamplesWithAlterationInGene"
      ],
      "properties": {
        "alteration": {
          "type": "integer",
          "format": "int32"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "molecularProfileId": {
          "type": "string"
        },
        "numberOfSamples": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfSamplesWithAlterationInGene": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "CopyNumberCount"
    },
    "CopyNumberCountByGene": {
      "type": "object",
      "properties": {
        "alteration": {
          "type": "integer",
          "format": "int32"
        },
        "cytoband": {
          "type": "string"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "matchingGenePanelIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "numberOfAlteredCases": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfProfiledCases": {
          "type": "integer",
          "format": "int32"
        },
        "qValue": {
          "type": "number"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "CopyNumberCountByGene"
    },
    "CopyNumberCountIdentifier": {
      "type": "object",
      "properties": {
        "alteration": {
          "type": "integer",
          "format": "int32"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "CopyNumberCountIdentifier"
    },
    "CosmicMutation": {
      "type": "object",
      "required": [
        "cosmicMutationId",
        "count",
        "proteinChange"
      ],
      "properties": {
        "cosmicMutationId": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "keyword": {
          "type": "string"
        },
        "proteinChange": {
          "type": "string"
        }
      },
      "title": "CosmicMutation"
    },
    "CountSummary": {
      "type": "object",
      "required": [
        "alteredCount",
        "name",
        "profiledCount"
      ],
      "properties": {
        "alteredCount": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "profiledCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "CountSummary"
    },
    "CustomDriverAnnotationReport": {
      "type": "object",
      "properties": {
        "hasBinary": {
          "type": "boolean"
        },
        "tiers": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      },
      "title": "CustomDriverAnnotationReport"
    },
    "DataAccessToken": {
      "type": "object",
      "properties": {
        "creation": {
          "type": "string",
          "example": "yyyy-MM-dd HH:mm:ss"
        },
        "expiration": {
          "type": "string",
          "example": "yyyy-MM-dd HH:mm:ss"
        },
        "token": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "DataAccessToken"
    },
    "DataFilter": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataFilterValue"
          }
        }
      },
      "title": "DataFilter"
    },
    "DataFilterValue": {
      "type": "object",
      "properties": {
        "end": {
          "type": "number"
        },
        "start": {
          "type": "number"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "DataFilterValue"
    },
    "DensityPlotBin": {
      "type": "object",
      "properties": {
        "binX": {
          "type": "number"
        },
        "binY": {
          "type": "number"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "maxX": {
          "type": "number"
        },
        "maxY": {
          "type": "number"
        },
        "minX": {
          "type": "number"
        },
        "minY": {
          "type": "number"
        }
      },
      "title": "DensityPlotBin"
    },
    "DensityPlotData": {
      "type": "object",
      "required": [
        "bins"
      ],
      "properties": {
        "bins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DensityPlotBin"
          }
        },
        "pearsonCorr": {
          "type": "number",
          "format": "double"
        },
        "spearmanCorr": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "DensityPlotData"
    },
    "GeneFilter": {
      "type": "object",
      "properties": {
        "geneQueries": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GeneFilterQuery"
            }
          }
        },
        "molecularProfileIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      },
      "title": "GeneFilter"
    },
    "GeneFilterQuery": {
      "type": "object",
      "properties": {
        "alterations": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AMP",
              "DIPLOID",
              "GAIN",
              "HETLOSS",
              "HOMDEL"
            ]
          }
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "includeDriver": {
          "type": "boolean"
        },
        "includeGermline": {
          "type": "boolean"
        },
        "includeSomatic": {
          "type": "boolean"
        },
        "includeUnknownOncogenicity": {
          "type": "boolean"
        },
        "includeUnknownStatus": {
          "type": "boolean"
        },
        "includeUnknownTier": {
          "type": "boolean"
        },
        "includeVUS": {
          "type": "boolean"
        },
        "tiersBooleanMap": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        }
      },
      "title": "GeneFilterQuery"
    },
    "GenericAssayDataBin": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "type": "number"
        },
        "profileType": {
          "type": "string"
        },
        "specialValue": {
          "type": "string"
        },
        "stableId": {
          "type": "string"
        },
        "start": {
          "type": "number"
        }
      },
      "title": "GenericAssayDataBin"
    },
    "GenericAssayDataBinCountFilter": {
      "type": "object",
      "properties": {
        "genericAssayDataBinFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenericAssayDataBinFilter"
          }
        },
        "studyViewFilter": {
          "$ref": "#/definitions/StudyViewFilter"
        }
      },
      "title": "GenericAssayDataBinCountFilter"
    },
    "GenericAssayDataBinFilter": {
      "type": "object",
      "properties": {
        "binMethod": {
          "type": "string",
          "enum": [
            "CUSTOM",
            "GENERATE",
            "MEDIAN",
            "QUARTILE"
          ]
        },
        "binsGeneratorConfig": {
          "$ref": "#/definitions/BinsGeneratorConfig"
        },
        "customBins": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "disableLogScale": {
          "type": "boolean"
        },
        "end": {
          "type": "number"
        },
        "profileType": {
          "type": "string"
        },
        "stableId": {
          "type": "string"
        },
        "start": {
          "type": "number"
        }
      },
      "title": "GenericAssayDataBinFilter"
    },
    "GenericAssayDataCount": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "GenericAssayDataCount"
    },
    "GenericAssayDataCountFilter": {
      "type": "object",
      "properties": {
        "genericAssayDataFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenericAssayDataFilter"
          }
        },
        "studyViewFilter": {
          "$ref": "#/definitions/StudyViewFilter"
        }
      },
      "title": "GenericAssayDataCountFilter"
    },
    "GenericAssayDataCountItem": {
      "type": "object",
      "properties": {
        "counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenericAssayDataCount"
          }
        },
        "stableId": {
          "type": "string"
        }
      },
      "title": "GenericAssayDataCountItem"
    },
    "GenericAssayDataFilter": {
      "type": "object",
      "properties": {
        "profileType": {
          "type": "string"
        },
        "stableId": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataFilterValue"
          }
        }
      },
      "title": "GenericAssayDataFilter"
    },
    "GenericAssayEnrichment": {
      "type": "object",
      "required": [
        "genericEntityMetaProperties",
        "groupsStatistics",
        "name",
        "pValue",
        "stableId"
      ],
      "properties": {
        "genericEntityMetaProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "groupsStatistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupStatistics"
          }
        },
        "name": {
          "type": "string"
        },
        "pValue": {
          "type": "number"
        },
        "stableId": {
          "type": "string"
        }
      },
      "title": "GenericAssayEnrichment"
    },
    "Geneset": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "genesetId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "refLink": {
          "type": "string"
        },
        "representativePvalue": {
          "type": "number",
          "format": "double"
        },
        "representativeScore": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Geneset"
    },
    "GenesetCorrelation": {
      "type": "object",
      "properties": {
        "correlationValue": {
          "type": "number",
          "format": "double"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "expressionGeneticProfileId": {
          "type": "string"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "zScoreGeneticProfileId": {
          "type": "string"
        }
      },
      "title": "GenesetCorrelation"
    },
    "GenesetDataFilterCriteria": {
      "type": "object",
      "properties": {
        "genesetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleListId": {
          "type": "string"
        }
      },
      "title": "GenesetDataFilterCriteria"
    },
    "GenesetHierarchyInfo": {
      "type": "object",
      "properties": {
        "genesets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Geneset"
          }
        },
        "nodeId": {
          "type": "integer",
          "format": "int32"
        },
        "nodeName": {
          "type": "string"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "parentNodeName": {
          "type": "string"
        }
      },
      "title": "GenesetHierarchyInfo"
    },
    "GenesetMolecularData": {
      "type": "object",
      "required": [
        "geneticProfileId",
        "patientId",
        "sampleId",
        "studyId",
        "value"
      ],
      "properties": {
        "geneset": {
          "$ref": "#/definitions/Geneset"
        },
        "genesetId": {
          "type": "string"
        },
        "geneticProfileId": {
          "type": "string"
        },
        "patientId": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        },
        "stableId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "GenesetMolecularData"
    },
    "GenomicDataBin": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "type": "number"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "profileType": {
          "type": "string"
        },
        "specialValue": {
          "type": "string"
        },
        "start": {
          "type": "number"
        }
      },
      "title": "GenomicDataBin"
    },
    "GenomicDataBinCountFilter": {
      "type": "object",
      "properties": {
        "genomicDataBinFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenomicDataBinFilter"
          }
        },
        "studyViewFilter": {
          "$ref": "#/definitions/StudyViewFilter"
        }
      },
      "title": "GenomicDataBinCountFilter"
    },
    "GenomicDataBinFilter": {
      "type": "object",
      "properties": {
        "binMethod": {
          "type": "string",
          "enum": [
            "CUSTOM",
            "GENERATE",
            "MEDIAN",
            "QUARTILE"
          ]
        },
        "binsGeneratorConfig": {
          "$ref": "#/definitions/BinsGeneratorConfig"
        },
        "customBins": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "disableLogScale": {
          "type": "boolean"
        },
        "end": {
          "type": "number"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "profileType": {
          "type": "string"
        },
        "start": {
          "type": "number"
        }
      },
      "title": "GenomicDataBinFilter"
    },
    "GenomicDataCount": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "GenomicDataCount"
    },
    "GenomicDataFilter": {
      "type": "object",
      "properties": {
        "hugoGeneSymbol": {
          "type": "string"
        },
        "profileType": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataFilterValue"
          }
        }
      },
      "title": "GenomicDataFilter"
    },
    "GenomicEnrichment": {
      "type": "object",
      "required": [
        "entrezGeneId",
        "groupsStatistics",
        "hugoGeneSymbol",
        "pValue"
      ],
      "properties": {
        "cytoband": {
          "type": "string"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "groupsStatistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupStatistics"
          }
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "pValue": {
          "type": "number"
        }
      },
      "title": "GenomicEnrichment"
    },
    "Gistic": {
      "type": "object",
      "required": [
        "amp",
        "chromosome",
        "cytoband",
        "qValue",
        "studyId",
        "widePeakEnd",
        "widePeakStart"
      ],
      "properties": {
        "amp": {
          "type": "boolean"
        },
        "chromosome": {
          "type": "integer",
          "format": "int32"
        },
        "cytoband": {
          "type": "string"
        },
        "genes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GisticToGene"
          }
        },
        "qValue": {
          "type": "number"
        },
        "studyId": {
          "type": "string"
        },
        "widePeakEnd": {
          "type": "integer",
          "format": "int32"
        },
        "widePeakStart": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Gistic"
    },
    "GisticToGene": {
      "type": "object",
      "required": [
        "entrezGeneId",
        "hugoGeneSymbol"
      ],
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "hugoGeneSymbol": {
          "type": "string"
        }
      },
      "title": "GisticToGene"
    },
    "Group": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "sampleIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleIdentifier"
          }
        }
      },
      "title": "Group"
    },
    "GroupFilter": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Group"
          }
        }
      },
      "title": "GroupFilter"
    },
    "GroupStatistics": {
      "type": "object",
      "required": [
        "meanExpression",
        "name",
        "standardDeviation"
      ],
      "properties": {
        "meanExpression": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "standardDeviation": {
          "type": "number"
        }
      },
      "title": "GroupStatistics"
    },
    "MolecularProfileCaseIdentifier": {
      "type": "object",
      "required": [
        "caseId",
        "molecularProfileId"
      ],
      "properties": {
        "caseId": {
          "type": "string"
        },
        "molecularProfileId": {
          "type": "string"
        }
      },
      "title": "MolecularProfileCaseIdentifier"
    },
    "MolecularProfileCasesGroupAndAlterationTypeFilter": {
      "type": "object",
      "required": [
        "molecularProfileCasesGroupFilter"
      ],
      "properties": {
        "alterationEventTypes": {
          "$ref": "#/definitions/AlterationFilter"
        },
        "molecularProfileCasesGroupFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MolecularProfileCasesGroupFilter"
          }
        }
      },
      "title": "MolecularProfileCasesGroupAndAlterationTypeFilter"
    },
    "MolecularProfileCasesGroupFilter": {
      "type": "object",
      "properties": {
        "molecularProfileCaseIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MolecularProfileCaseIdentifier"
          }
        },
        "name": {
          "type": "string"
        }
      },
      "title": "MolecularProfileCasesGroupFilter"
    },
    "MrnaPercentile": {
      "type": "object",
      "required": [
        "entrezGeneId",
        "molecularProfileId",
        "patientId",
        "percentile",
        "sampleId",
        "studyId",
        "zScore"
      ],
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "molecularProfileId": {
          "type": "string"
        },
        "patientId": {
          "type": "string"
        },
        "percentile": {
          "type": "number"
        },
        "sampleId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        },
        "zScore": {
          "type": "number"
        }
      },
      "title": "MrnaPercentile"
    },
    "MutSig": {
      "type": "object",
      "required": [
        "entrezGeneId",
        "hugoGeneSymbol",
        "numberOfMutations",
        "pValue",
        "qValue",
        "rank",
        "studyId"
      ],
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "numberOfMutations": {
          "type": "integer",
          "format": "int32"
        },
        "pValue": {
          "type": "number"
        },
        "qValue": {
          "type": "number"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "studyId": {
          "type": "string"
        }
      },
      "title": "MutSig"
    },
    "MutationCountByPosition": {
      "type": "object",
      "required": [
        "count",
        "entrezGeneId",
        "proteinPosEnd",
        "proteinPosStart"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "proteinPosEnd": {
          "type": "integer",
          "format": "int32"
        },
        "proteinPosStart": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "MutationCountByPosition"
    },
    "MutationPositionIdentifier": {
      "type": "object",
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "proteinPosEnd": {
          "type": "integer",
          "format": "int32"
        },
        "proteinPosStart": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "MutationPositionIdentifier"
    },
    "MutationSpectrum": {
      "type": "object",
      "required": [
        "CtoA",
        "CtoG",
        "CtoT",
        "TtoA",
        "TtoC",
        "TtoG",
        "molecularProfileId",
        "patientId",
        "sampleId",
        "studyId"
      ],
      "properties": {
        "CtoA": {
          "type": "integer",
          "format": "int32"
        },
        "CtoG": {
          "type": "integer",
          "format": "int32"
        },
        "CtoT": {
          "type": "integer",
          "format": "int32"
        },
        "TtoA": {
          "type": "integer",
          "format": "int32"
        },
        "TtoC": {
          "type": "integer",
          "format": "int32"
        },
        "TtoG": {
          "type": "integer",
          "format": "int32"
        },
        "molecularProfileId": {
          "type": "string"
        },
        "patientId": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        }
      },
      "title": "MutationSpectrum"
    },
    "MutationSpectrumFilter": {
      "type": "object",
      "properties": {
        "sampleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleListId": {
          "type": "string"
        }
      },
      "title": "MutationSpectrumFilter"
    },
    "OredPatientTreatmentFilters": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatientTreatmentFilter"
          }
        }
      },
      "title": "OredPatientTreatmentFilters"
    },
    "OredSampleTreatmentFilters": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleTreatmentFilter"
          }
        }
      },
      "title": "OredSampleTreatmentFilters"
    },
    "PatientTreatmentFilter": {
      "type": "object",
      "properties": {
        "treatment": {
          "type": "string"
        }
      },
      "title": "PatientTreatmentFilter"
    },
    "ReferenceGenomeGene": {
      "type": "object",
      "required": [
        "entrezGeneId",
        "referenceGenomeId"
      ],
      "properties": {
        "chromosome": {
          "type": "string"
        },
        "cytoband": {
          "type": "string"
        },
        "end": {
          "type": "integer",
          "format": "int64"
        },
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "hugoGeneSymbol": {
          "type": "string"
        },
        "referenceGenomeId": {
          "type": "integer",
          "format": "int32"
        },
        "start": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ReferenceGenomeGene"
    },
    "ResourceData": {
      "type": "object",
      "required": [
        "resourceId",
        "studyId",
        "url"
      ],
      "properties": {
        "patientId": {
          "type": "string"
        },
        "resourceDefinition": {
          "$ref": "#/definitions/ResourceDefinition"
        },
        "resourceId": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "title": "ResourceData"
    },
    "ResourceDefinition": {
      "type": "object",
      "required": [
        "displayName",
        "resourceId",
        "resourceType",
        "studyId"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "openByDefault": {
          "type": "boolean"
        },
        "priority": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string",
          "enum": [
            "PATIENT",
            "SAMPLE",
            "STUDY"
          ]
        },
        "studyId": {
          "type": "string"
        }
      },
      "title": "ResourceDefinition"
    },
    "Sample": {
      "type": "object",
      "required": [
        "patientId",
        "sampleId",
        "studyId"
      ],
      "properties": {
        "copyNumberSegmentPresent": {
          "type": "boolean"
        },
        "patientId": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        },
        "sampleType": {
          "type": "string",
          "enum": [
            "BLOOD_NORMAL",
            "METASTATIC",
            "PRIMARY_BLOOD_TUMOR",
            "PRIMARY_SOLID_TUMOR",
            "RECURRENT_BLOOD_TUMOR",
            "RECURRENT_SOLID_TUMOR",
            "SOLID_NORMAL"
          ]
        },
        "sequenced": {
          "type": "boolean"
        },
        "studyId": {
          "type": "string"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        }
      },
      "title": "Sample"
    },
    "SampleIdentifier": {
      "type": "object",
      "properties": {
        "sampleId": {
          "type": "string"
        },
        "studyId": {
          "type": "string"
        }
      },
      "title": "SampleIdentifier"
    },
    "SampleMolecularIdentifier": {
      "type": "object",
      "properties": {
        "molecularProfileId": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        }
      },
      "title": "SampleMolecularIdentifier"
    },
    "SampleTreatmentFilter": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "enum": [
            "Post",
            "Pre"
          ]
        },
        "treatment": {
          "type": "string"
        }
      },
      "title": "SampleTreatmentFilter"
    },
    "StructuralVariant": {
      "type": "object",
      "properties": {
        "annotation": {
          "type": "string"
        },
        "breakpointType": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "connectionType": {
          "type": "string"
        },
        "dnaSupport": {
          "type": "string"
        },
        "driverFilter": {
          "type": "string"
        },
        "driverFilterAnn": {
          "type": "string"
        },
        "driverTiersFilter": {
          "type": "string"
        },
        "driverTiersFilterAnn": {
          "type": "string"
        },
        "eventInfo": {
          "type": "string"
        },
        "length": {
          "type": "integer",
          "format": "int32"
        },
        "molecularProfileId": {
          "type": "string"
        },
        "namespaceColumns": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "ncbiBuild": {
          "type": "string"
        },
        "normalPairedEndReadCount": {
          "type": "integer",
          "format": "int32"
        },
        "normalReadCount": {
          "type": "integer",
          "format": "int32"
        },
        "normalSplitReadCount": {
          "type": "integer",
          "format": "int32"
        },
        "normalVariantCount": {
          "type": "integer",
          "format": "int32"
        },
        "patientId": {
          "type": "string"
        },
        "rnaSupport": {
          "type": "string"
        },
        "sampleId": {
          "type": "string"
        },
        "site1Chromosome": {
          "type": "string"
        },
        "site1Contig": {
          "type": "string"
        },
        "site1Description": {
          "type": "string"
        },
        "site1EnsemblTranscriptId": {
          "type": "string"
        },
        "site1EntrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "site1HugoSymbol": {
          "type": "string"
        },
        "site1Position": {
          "type": "integer",
          "format": "int32"
        },
        "site1Region": {
          "type": "string"
        },
        "site1RegionNumber": {
          "type": "integer",
          "format": "int32"
        },
        "site2Chromosome": {
          "type": "string"
        },
        "site2Contig": {
          "type": "string"
        },
        "site2Description": {
          "type": "string"
        },
        "site2EffectOnFrame": {
          "type": "string"
        },
        "site2EnsemblTranscriptId": {
          "type": "string"
        },
        "site2EntrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "site2HugoSymbol": {
          "type": "string"
        },
        "site2Position": {
          "type": "integer",
          "format": "int32"
        },
        "site2Region": {
          "type": "string"
        },
        "site2RegionNumber": {
          "type": "integer",
          "format": "int32"
        },
        "studyId": {
          "type": "string"
        },
        "svStatus": {
          "type": "string"
        },
        "tumorPairedEndReadCount": {
          "type": "integer",
          "format": "int32"
        },
        "tumorReadCount": {
          "type": "integer",
          "format": "int32"
        },
        "tumorSplitReadCount": {
          "type": "integer",
          "format": "int32"
        },
        "tumorVariantCount": {
          "type": "integer",
          "format": "int32"
        },
        "uniquePatientKey": {
          "type": "string"
        },
        "uniqueSampleKey": {
          "type": "string"
        },
        "variantClass": {
          "type": "string"
        }
      },
      "title": "StructuralVariant"
    },
    "StructuralVariantFilter": {
      "type": "object",
      "properties": {
        "entrezGeneIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "molecularProfileIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sampleMolecularIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleMolecularIdentifier"
          }
        },
        "structuralVariantQueries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructuralVariantQuery"
          }
        }
      },
      "title": "StructuralVariantFilter"
    },
    "StructuralVariantGeneSubQuery": {
      "type": "object",
      "properties": {
        "entrezId": {
          "type": "integer",
          "format": "int32"
        },
        "hugoSymbol": {
          "type": "string"
        },
        "specialValue": {
          "type": "string",
          "enum": [
            "ANY_GENE",
            "NO_GENE"
          ]
        }
      },
      "title": "StructuralVariantGeneSubQuery"
    },
    "StructuralVariantQuery": {
      "type": "object",
      "properties": {
        "gene1": {
          "$ref": "#/definitions/StructuralVariantGeneSubQuery"
        },
        "gene2": {
          "$ref": "#/definitions/StructuralVariantGeneSubQuery"
        }
      },
      "title": "StructuralVariantQuery"
    },
    "StudyViewFilter": {
      "type": "object",
      "properties": {
        "alterationFilter": {
          "$ref": "#/definitions/AlterationFilter"
        },
        "caseLists": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "clinicalDataFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalDataFilter"
          }
        },
        "clinicalEventFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataFilter"
          }
        },
        "customDataFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClinicalDataFilter"
          }
        },
        "geneFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeneFilter"
          }
        },
        "genericAssayDataFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenericAssayDataFilter"
          }
        },
        "genomicDataFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenomicDataFilter"
          }
        },
        "genomicProfiles": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "patientTreatmentFilters": {
          "$ref": "#/definitions/AndedPatientTreatmentFilters"
        },
        "patientTreatmentGroupFilters": {
          "$ref": "#/definitions/AndedPatientTreatmentFilters"
        },
        "patientTreatmentTargetFilters": {
          "$ref": "#/definitions/AndedPatientTreatmentFilters"
        },
        "sampleIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleIdentifier"
          }
        },
        "sampleTreatmentFilters": {
          "$ref": "#/definitions/AndedSampleTreatmentFilters"
        },
        "sampleTreatmentGroupFilters": {
          "$ref": "#/definitions/AndedSampleTreatmentFilters"
        },
        "sampleTreatmentTargetFilters": {
          "$ref": "#/definitions/AndedSampleTreatmentFilters"
        },
        "studyIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "StudyViewFilter"
    },
    "VariantCount": {
      "type": "object",
      "required": [
        "entrezGeneId",
        "molecularProfileId",
        "numberOfSamples",
        "numberOfSamplesWithKeyword",
        "numberOfSamplesWithMutationInGene"
      ],
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "keyword": {
          "type": "string"
        },
        "molecularProfileId": {
          "type": "string"
        },
        "numberOfSamples": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfSamplesWithKeyword": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfSamplesWithMutationInGene": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "VariantCount"
    },
    "VariantCountIdentifier": {
      "type": "object",
      "properties": {
        "entrezGeneId": {
          "type": "integer",
          "format": "int32"
        },
        "keyword": {
          "type": "string"
        }
      },
      "title": "VariantCountIdentifier"
    }
  }
}
